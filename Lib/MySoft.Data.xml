<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MySoft.Data</name>
    </assembly>
    <members>
        <member name="T:MySoft.Data.SysField">
            <summary>
            系统字段
            </summary>
        </member>
        <member name="T:MySoft.Data.Field">
            <summary>
            用于实体内的Field操作
            </summary>
        </member>
        <member name="T:MySoft.Data.Design.IField">
            <summary>
            
            </summary>
        </member>
        <member name="F:MySoft.Data.Field.All">
            <summary>
            字段*
            </summary>
        </member>
        <member name="M:MySoft.Data.Field.#ctor(System.String)">
            <summary>
            实例化Field
            </summary>
            <param name="fieldName"></param>
        </member>
        <member name="M:MySoft.Data.Field.#ctor(System.String,System.String)">
            <summary>
            实例化Field
            </summary>
            <param name="tableName"></param>
            <param name="fieldName"></param>
        </member>
        <member name="M:MySoft.Data.Field.#ctor(System.String,System.String,System.String)">
            <summary>
            实例化Field
            </summary>
            <param name="propertyName"></param>
            <param name="tableName"></param>
            <param name="fieldName"></param>
        </member>
        <member name="M:MySoft.Data.Field.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            实例化Field
            </summary>
            <param name="propertyName"></param>
            <param name="tableName"></param>
            <param name="fieldName"></param>
            <param name="aliasName"></param>
        </member>
        <member name="M:MySoft.Data.Field.Distinct">
            <summary>
            对字段进行Distinct操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.Count">
            <summary>
            对字段进行Count操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.Sum">
            <summary>
            对字段进行Sum操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.Avg">
            <summary>
            对字段进行Avg操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.Max">
            <summary>
            对字段进行Max操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.Min">
            <summary>
            对字段进行Min操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.As(System.String)">
            <summary>
            更改字段的别名
            </summary>
            <param name="aliasName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.At(System.String)">
            <summary>
            更改字段所在表
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.At(MySoft.Data.Table)">
            <summary>
            更改字段所在表
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.IsNull">
            <summary>
            返回一个值为null的条件
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.Contains(System.String)">
            <summary>
            指定value进行模糊查询
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.Like(System.String)">
            <summary>
            指定value进行Like查询
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.Between(System.Object,System.Object)">
            <summary>
            进行Between操作
            </summary>
            <param name="leftValue"></param>
            <param name="rightValue"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.In``1(MySoft.Data.Field)">
            <summary>
            进行In子查询操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.In``1(MySoft.Data.Table,MySoft.Data.Field)">
            <summary>
            进行In子查询操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.In``1(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            进行In子查询操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.In``1(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            进行In子查询操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.In``1(MySoft.Data.QuerySection{``0})">
            <summary>
            进行In操作,query为一个子查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.In``1(MySoft.Data.TopSection{``0})">
            <summary>
            进行In操作,query为一个子查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="top"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.In(System.Object[])">
            <summary>
            进行In子查询操作
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.In(MySoft.Data.QueryCreator)">
            <summary>
            进行In子查询操作
            </summary>
            <param name="creator"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Field.CreateWhereClip(MySoft.Data.Field,System.String,System.Object)">
            <summary>
            创建一个参数方式的WhereClip
            </summary>
            <param name="field"></param>
            <param name="join"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.Field.Name">
            <summary>
            获取真实字段名
            </summary>
        </member>
        <member name="P:MySoft.Data.Field.OriginalName">
            <summary>
            获取原始的字段名
            </summary>
        </member>
        <member name="P:MySoft.Data.Field.PropertyName">
            <summary>
            属性名称
            </summary>
        </member>
        <member name="T:MySoft.Data.Field`1">
            <summary>
            用于实体内的Field操作
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:MySoft.Data.Design.SequenceAttribute">
            <summary>
            定义自增长列
            </summary>
        </member>
        <member name="M:MySoft.Data.IDbProcess.InsertOrUpdate``1(``0)">
            <summary>
            插入或更新
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IDbProcess.InsertOrUpdate``1(MySoft.Data.Table,``0)">
            <summary>
            插入或更新
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.TopSection`1">
            <summary>
            Top对应的Query查询
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:MySoft.Data.TopSection`1.SubQuery">
            <summary>
            返回一个子查询
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.TopSection`1.SubQuery(System.String)">
            <summary>
            返回一个子查询
            </summary>
            <param name="aliasName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.TopSection`1.SubQuery``1">
            <summary>
            返回一个子查询
            </summary>
            <typeparam name="TSub"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.TopSection`1.SubQuery``1(System.String)">
            <summary>
            返回一个子查询
            </summary>
            <typeparam name="TSub"></typeparam>
            <param name="aliasName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.TopSection`1.ToListResult">
            <summary>
            返回Object列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.TopSection`1.ToListResult``1">
            <summary>
            返回Object列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.TopSection`1.ToList">
            <summary>
            返回T类型列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.TopSection`1.ToList``1">
            <summary>
            返回TEntity类型列表
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.TopSection`1.ToTable">
            <summary>
            返回一个DataTable
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.TopSection`1.ToReader">
            <summary>
            返回一个DataReader
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.TopSection`1.ToScalar``1">
            <summary>
            返回首行首列值
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.TopSection`1.ToScalar">
            <summary>
            返回首行首列值
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.TopSection`1.Count">
            <summary>
            返回首行首列值
            </summary>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.InsertCreator">
            <summary>
            插入创建器
            </summary>
        </member>
        <member name="M:MySoft.Data.InsertCreator.NewCreator">
            <summary>
            创建一个新的插入器
            </summary>
        </member>
        <member name="M:MySoft.Data.InsertCreator.#ctor">
            <summary>
            实体化InsertCreator
            </summary>
        </member>
        <member name="M:MySoft.Data.InsertCreator.From``1">
            <summary>
            设置表信息
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.InsertCreator.From(System.String)">
            <summary>
            设置表名
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="M:MySoft.Data.InsertCreator.From(MySoft.Data.Table)">
            <summary>
            设置表信息
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:MySoft.Data.InsertCreator.SetEntity``1(``0)">
            <summary>
            设置实体信息
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.InsertCreator.SetIdentityField(MySoft.Data.Field)">
            <summary>
            设置主键字段
            </summary>
            <param name="field"></param>
        </member>
        <member name="M:MySoft.Data.InsertCreator.SetIdentityField(System.String)">
            <summary>
            设置主键字段
            </summary>
            <param name="fieldName"></param>
        </member>
        <member name="M:MySoft.Data.InsertCreator.AddInsert(MySoft.Data.Field,System.Object)">
            <summary>
            添加一个数据
            </summary>
            <param name="field"></param>
            <param name="value"></param>
        </member>
        <member name="M:MySoft.Data.InsertCreator.AddInsert(System.String,System.Object)">
            <summary>
            添加一个数据
            </summary>
            <param name="fieldName"></param>
            <param name="value"></param>
        </member>
        <member name="M:MySoft.Data.InsertCreator.AddInsert(MySoft.Data.Field[],System.Object[])">
            <summary>
            添加一个数据
            </summary>
            <param name="fields"></param>
            <param name="values"></param>
        </member>
        <member name="M:MySoft.Data.InsertCreator.AddInsert(System.String[],System.Object[])">
            <summary>
            添加一个数据
            </summary>
            <param name="fieldNames"></param>
            <param name="values"></param>
        </member>
        <member name="M:MySoft.Data.InsertCreator.RemoveInsert(System.String[])">
            <summary>
            移除指定的列
            </summary>
            <param name="fieldNames"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.InsertCreator.RemoveInsert(MySoft.Data.Field[])">
            <summary>
            移除指定的列
            </summary>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.InsertCreator.Table">
            <summary>
            返回table
            </summary>
        </member>
        <member name="P:MySoft.Data.InsertCreator.IdentityField">
            <summary>
            返回标识列字段
            </summary>
        </member>
        <member name="P:MySoft.Data.InsertCreator.SequenceName">
            <summary>
            返回自增量名称
            </summary>
        </member>
        <member name="T:MySoft.Data.ILogable">
            <summary>
            Mark a implementing class as loggable.
            </summary>
        </member>
        <member name="E:MySoft.Data.ILogable.OnLog">
            <summary>
            OnLog event.
            </summary>
        </member>
        <member name="M:MySoft.Data.DbProvider.CreateConnection">
            <summary>
            创建DbConnection
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbProvider.Serialization(System.String)">
            <summary>
            返回最终排序的SQL
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbProvider.CreateSqlCommand(System.String,MySoft.Data.SQLParameter[])">
            <summary>
            创建SQL命令
            </summary>
            <param name="cmdText"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbProvider.CreateProcCommand(System.String,MySoft.Data.SQLParameter[])">
            <summary>
            创建存储过程命令
            </summary>
            <param name="procName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbProvider.FormatCommand(System.Data.Common.DbCommand)">
            <summary>
            格式化命令
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbProvider.WriteLog(System.Data.Common.DbCommand)">
            <summary>
            Writes the log.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:MySoft.Data.DbProvider.GetLog(System.Data.Common.DbCommand)">
            <summary>
            获取输出的日志
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbProvider.FormatIdentityName(System.String)">
            <summary>
            格式化IdentityName
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbProvider.PrepareCommand(System.Data.Common.DbCommand)">
            <summary>
            调整DbCommand命令
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbProvider.CreatePageQuery``1(MySoft.Data.QuerySection{``0},System.Int32,System.Int32)">
            <summary>
            创建分页查询
            </summary>
            <typeparam name="T"></typeparam>
            <param name="query"></param>
            <param name="itemCount"></param>
            <param name="skipCount"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbProvider.CreateParameter(System.String,System.Object)">
            <summary>
            创建DbParameter
            </summary>
            <param name="parameterName"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbProvider.CreateOrmParameter(System.Object)">
            <summary>
            创建OrmParameter
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbProvider.AddOrmParameter(System.Data.Common.DbCommand,System.Collections.Generic.IList{MySoft.Data.SQLParameter})">
            <summary>
            给命令添加参数
            </summary>
            <param name="cmd"></param>
            <param name="plist"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbProvider.CheckNullOrField(System.Object)">
            <summary>
            检测是否为非法值
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbProvider.CheckStruct(System.Object)">
            <summary>
            检测是否为结构数据
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="E:MySoft.Data.DbProvider.OnLog">
            <summary>
            OnLog event.
            </summary>
        </member>
        <member name="P:MySoft.Data.DbProvider.AccessProvider">
            <summary>
            是否为Access驱动
            </summary>
        </member>
        <member name="P:MySoft.Data.DbProvider.UseAutoIncrement">
            <summary>
            是否使用自增列
            </summary>
        </member>
        <member name="P:MySoft.Data.DbProvider.SupportBatch">
            <summary>
            是否支持批处理
            </summary>
        </member>
        <member name="P:MySoft.Data.DbProvider.RowAutoID">
            <summary>
            返回自动ID的sql语句
            </summary>
        </member>
        <member name="M:MySoft.Data.ProcSection.AddParameters(System.Data.Common.DbParameter[])">
            <summary>
            增加多个参数到当前Proc命令
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.AddInputParameter(System.String,System.Data.DbType,System.Object)">
            <summary>
            增加一个输入参数到当前Proc命令
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.AddInputParameter(System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            增加一个输入参数到当前Proc命令
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.AddOutputParameter(System.String,System.Data.DbType,System.Int32)">
            <summary>
            增加一个输出参数到当前Proc命令
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.AddInputOutputParameter(System.String,System.Data.DbType,System.Object,System.Int32)">
            <summary>
            增加一个输入输出参数到当前Proc命令
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <param name="value"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.AddReturnValueParameter(System.String,System.Data.DbType)">
            <summary>
            增加一个返回参数到当前Proc命令
            </summary>
            <param name="parameterName"></param>
            <param name="dbType"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.Execute">
            <summary>
            执行当前Proc
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.ToSingle``1">
            <summary>
            执行当前Proc并返回一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.ToList``1">
            <summary>
            执行当前Proc并返回一个列表
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.ToListResult``1">
            <summary>
            执行当前Proc并返回一个列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.ToReader">
            <summary>
            执行当前Proc并返回一个DbReader
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.ToTable">
            <summary>
            执行当前Proc并返回一个DataTable
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.ToDataSet">
            <summary>
            执行当前Sql命令并返回一个DataSet
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.ToScalar">
            <summary>
            执行当前Proc并返回一个值
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.ToScalar``1">
            <summary>
            执行当前Proc并返回一个值
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.Execute(System.Collections.Generic.IDictionary{System.String,System.Object}@)">
            <summary>
            执行当前Proc,并输出参数值
            </summary>
            <param name="outValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.ToSingle``1(System.Collections.Generic.IDictionary{System.String,System.Object}@)">
            <summary>
            执行当前Proc返回一个实体,并输出参数值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="outValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.ToList``1(System.Collections.Generic.IDictionary{System.String,System.Object}@)">
            <summary>
            执行当前Proc返回一个列表,并输出参数值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="outValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.ToListResult``1(System.Collections.Generic.IDictionary{System.String,System.Object}@)">
            <summary>
            执行当前Proc并返回一个列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="outValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.ToReader(System.Collections.Generic.IDictionary{System.String,System.Object}@)">
            <summary>
            执行当前Proc返回一个DbReader,并输出参数值
            </summary>
            <param name="outValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.ToTable(System.Collections.Generic.IDictionary{System.String,System.Object}@)">
            <summary>
            执行当前Proc返回一个DataTable,并输出参数值
            </summary>
            <param name="outValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.ToDataSet(System.Collections.Generic.IDictionary{System.String,System.Object}@)">
            <summary>
            执行当前Proc返回一个DataSet,并输出参数值
            </summary>
            <param name="outValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.ToScalar(System.Collections.Generic.IDictionary{System.String,System.Object}@)">
            <summary>
            执行当前Proc返回一个值,并输出参数值
            </summary>
            <param name="outValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ProcSection.ToScalar``1(System.Collections.Generic.IDictionary{System.String,System.Object}@)">
            <summary>
            执行当前Proc返回一个值,并输出参数值
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="outValues"></param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.AllField`1">
            <summary>
            所有字段（特殊字段）
            </summary>
        </member>
        <member name="T:MySoft.Data.AllField">
            <summary>
            所有字段（特殊字段）
            </summary>
        </member>
        <member name="M:MySoft.Data.AllField.Remove(MySoft.Data.Field[])">
            <summary>
            选择被排除的列
            </summary>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.ExcludeField">
            <summary>
            用于被排除的Field
            </summary>
        </member>
        <member name="M:MySoft.Data.ExcludeField.#ctor(MySoft.Data.Field[])">
            <summary>
            实例化被排序的Field
            </summary>
            <param name="fields"></param>
        </member>
        <member name="T:MySoft.Data.TypeConstructor">
            <summary> 
            考虑到某些类型没有无参的构造函数，增加了描述构造信息的专门结构 
            </summary> 
        </member>
        <member name="T:MySoft.Data.ITypeMap">
            <summary> 
            管理抽象类型与实体类型的字典类型 
            </summary> 
        </member>
        <member name="M:MySoft.Data.ITypeMap.AddTypeConstructor(System.Type,MySoft.Data.TypeConstructor)">
            <summary>
            注册抽象类型需要使用的实体类型 
            该类型实体具有构造参数，实际的配置信息可以从外层机制获得。 
            </summary>
            <param name="type"></param>
            <param name="typeConstructor"></param>
        </member>
        <member name="P:MySoft.Data.ITypeMap.Item(System.Type)">
            <summary> 
            根据注册的目标抽象类型，返回一个实体类型及其构造参数数组 
            </summary> 
            <param name="type"></param> 
            <returns></returns> 
        </member>
        <member name="T:MySoft.Data.TypeMap">
            <summary> 
            管理抽象类型与实际实体类型映射关系，实际工程中应该从配置系统、参数系统获得。 
            这里为了示例方便，采用了一个纯内存字典的方式。 
            </summary> 
        </member>
        <member name="M:MySoft.Data.TypeMap.#ctor">
            <summary> 
            Singleton 
            </summary> 
        </member>
        <member name="M:MySoft.Data.TypeMap.AddTypeConstructor(System.Type,MySoft.Data.TypeConstructor)">
            <summary>
            注册抽象类型需要使用的实体类型 
            该类型实体具有构造参数，实际的配置信息可以从外层机制获得。 
            </summary>
            <param name="type"></param>
            <param name="typeConstructor"></param>
        </member>
        <member name="P:MySoft.Data.TypeMap.Item(System.Type)">
            <summary> 
            根据注册的目标抽象类型，返回一个实体类型及其构造参数数组 
            </summary> 
            <param name="type"></param> 
            <returns></returns> 
        </member>
        <member name="T:MySoft.Data.Assembler`1">
            <summary>
            提供注入的实现类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:MySoft.Data.Assembler`1.map">
            <summary> 
            其实TypeMap工程上本身就是个需要注入的类型，可以通过访问配置系统获得， 
            这里为了示例的方便，手工配置了一些类型映射信息。 
            </summary> 
        </member>
        <member name="M:MySoft.Data.Assembler`1.Create">
            <summary>
            创建一个实例
            </summary>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.UpdateCreator">
            <summary>
            更新创建器
            </summary>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.NewCreator">
            <summary>
            创建一个新的更新器
            </summary>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.#ctor">
            <summary>
            实体化UpdateCreator
            </summary>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.From``1">
            <summary>
            设置表信息
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.From(System.String)">
            <summary>
            设置表名
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.From(MySoft.Data.Table)">
            <summary>
            设置表信息
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.SetEntity``1(``0,System.Boolean)">
            <summary>
            设置表和实体信息
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.AddWhere(MySoft.Data.WhereClip)">
            <summary>
            添加一个条件
            </summary>
            <param name="where"></param>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.AddWhere(System.String,MySoft.Data.SQLParameter[])">
            <summary>
            添加一个条件
            </summary>
            <param name="where"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.AddWhere(MySoft.Data.Field,System.Object)">
            <summary>
            添加一个条件
            </summary>
            <param name="field"></param>
            <param name="value"></param>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.AddWhere(System.String,System.Object)">
            <summary>
            添加一个条件
            </summary>
            <param name="fieldName"></param>
            <param name="value"></param>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.AddUpdate(MySoft.Data.Field,System.Object)">
            <summary>
            添加一个数据
            </summary>
            <param name="field"></param>
            <param name="value"></param>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.AddUpdate(System.String,System.Object)">
            <summary>
            添加一个数据
            </summary>
            <param name="fieldName"></param>
            <param name="value"></param>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.AddUpdate(MySoft.Data.Field[],System.Object[])">
            <summary>
            添加一个数据
            </summary>
            <param name="fields"></param>
            <param name="values"></param>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.AddUpdate(System.String[],System.Object[])">
            <summary>
            添加一个数据
            </summary>
            <param name="fieldNames"></param>
            <param name="values"></param>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.RemoveUpdate(System.String[])">
            <summary>
            移除指定的列
            </summary>
            <param name="fieldNames"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.UpdateCreator.RemoveUpdate(MySoft.Data.Field[])">
            <summary>
            移除指定的列
            </summary>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.UpdateCreator.Table">
            <summary>
            返回table
            </summary>
        </member>
        <member name="P:MySoft.Data.UpdateCreator.Where">
            <summary>
            返回条件
            </summary>
        </member>
        <member name="T:MySoft.Data.FastInvokeHandler">
            <summary>Delegate for calling a method that is not known at runtime.</summary>
            <param name="target">the object to be called or null if the call is to a static method.</param>
            <param name="paramters">the parameters to the method.</param>
            <returns>the return value for the method or null if it doesn't return anything.</returns>
        </member>
        <member name="T:MySoft.Data.FastCreateInstanceHandler">
            <summary>Delegate for creating and object at runtime using the default constructor.</summary>
            <returns>the newly created object.</returns>
        </member>
        <member name="T:MySoft.Data.FastPropertyGetHandler">
            <summary>Delegate to get an arbitraty property at runtime.</summary>
            <param name="target">the object instance whose property will be obtained.</param>
            <returns>the property value.</returns>
        </member>
        <member name="T:MySoft.Data.FastPropertySetHandler">
            <summary>Delegate to set an arbitrary property at runtime.</summary>
            <param name="target">the object instance whose property will be modified.</param>
            <param name="parameter"></param>
        </member>
        <member name="T:MySoft.Data.DynamicCalls">
            <summary>Class with helper methods for dynamic invocation generating IL on the fly.</summary>
        </member>
        <member name="F:MySoft.Data.DynamicCalls.dictInvoker">
            <summary>
            用于存放GetMethodInvoker的Dictionary
            </summary>
        </member>
        <member name="F:MySoft.Data.DynamicCalls.dictCreator">
            <summary>
            用于存放GetInstanceCreator的Dictionary
            </summary>
        </member>
        <member name="M:MySoft.Data.DynamicCalls.GetInstanceCreator(System.Type)">
            <summary>Gets the instance creator delegate that can be use to create instances of the specified type.</summary>
            <param name="type">The type of the objects we want to create.</param>
            <returns>A delegate that can be used to create the objects.</returns>
        </member>
        <member name="F:MySoft.Data.DynamicCalls.dictGetter">
            <summary>
            用于存放GetPropertyGetter的Dictionary
            </summary>
        </member>
        <member name="F:MySoft.Data.DynamicCalls.dictSetter">
            <summary>
            用于存放SetPropertySetter的Dictionary
            </summary>
        </member>
        <member name="M:MySoft.Data.DynamicCalls.EmitCastToReference(System.Reflection.Emit.ILGenerator,System.Type)">
            <summary>Emits the cast to a reference, unboxing if needed.</summary>
            <param name="il">The MSIL generator.</param>
            <param name="type">The type to cast.</param>
        </member>
        <member name="M:MySoft.Data.DynamicCalls.EmitBoxIfNeeded(System.Reflection.Emit.ILGenerator,System.Type)">
            <summary>Boxes a type if needed.</summary>
            <param name="ilGenerator">The MSIL generator.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:MySoft.Data.DynamicCalls.EmitFastInt(System.Reflection.Emit.ILGenerator,System.Int32)">
            <summary>Emits code to save an integer to the evaluation stack.</summary>
            <param name="ilGeneartor">The MSIL generator.</param>
            <param name="value">The value to push.</param>
        </member>
        <member name="T:MySoft.Data.LogHandler">
            <summary>
            A delegate used for log.
            </summary>
            <param name="logMsg">The msg to write to log.</param>
        </member>
        <member name="T:MySoft.Data.Design.ReadOnlyType">
            <summary>
            
            </summary>
        </member>
        <member name="F:MySoft.Data.Design.ReadOnlyType.Entity">
            <summary>
            只读实体，只用于输出
            </summary>
        </member>
        <member name="F:MySoft.Data.Design.ReadOnlyType.View">
            <summary>
            数据库视图
            </summary>
        </member>
        <member name="T:MySoft.Data.Design.PrimaryKeyAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="T:MySoft.Data.QuerySection">
            <summary>
            查询器
            </summary>
        </member>
        <member name="M:MySoft.Data.QuerySection.SetPagingField(System.String)">
            <summary>
            设置分页字段
            </summary>
            <param name="pagingFieldName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection.SetPagingField(MySoft.Data.Field)">
            <summary>
            设置分页字段
            </summary>
            <param name="pagingField"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection.GetPage(System.Int32)">
            <summary>
            获取分页
            </summary>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection.ToQuery``1">
            <summary>
            返回一个查询
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection.ToScalar">
            <summary>
            返回首行首列值
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection.ToScalar``1">
            <summary>
            返回首行首列值
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection.Count">
            <summary>
            返回记录数
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection.Exists">
            <summary>
            记录是否存在
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection.ToSingle``1">
            <summary>
            返回T
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection.ToList``1">
            <summary>
            返回IList
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection.ToReader">
            <summary>
            返回ISourceReader
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection.ToTable">
            <summary>
            返回DataTable
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection.ToReader(System.Int32)">
            <summary>
            返回ISourceReader
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection.ToList``1(System.Int32)">
            <summary>
            返回IList
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection.ToTable(System.Int32)">
            <summary>
            返回DataTable
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection.ToListPage``1(System.Int32,System.Int32)">
            <summary>
            返回IDataView
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection.ToTablePage(System.Int32,System.Int32)">
            <summary>
            返回IDataView
            </summary>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.Entity">
            <summary>
            实体基类
            </summary>
        </member>
        <member name="T:MySoft.Data.Design.IEntity">
            <summary>
            实体接口
            </summary>
        </member>
        <member name="M:MySoft.Data.Design.IEntity.GetFields(MySoft.Data.FieldType)">
            <summary>
            获取字段列表
            </summary>
            <param name="fieldType"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Entity.Attach">
            <summary>
            将实体置为修改状态
            </summary>
        </member>
        <member name="M:MySoft.Data.Entity.Detach">
            <summary>
            将实体置为插入状态
            </summary>
        </member>
        <member name="M:MySoft.Data.Entity.Attach(MySoft.Data.Field[])">
            <summary>
            将实体置为修改状态并移除指定的列
            </summary>
            <param name="removeFields"></param>
        </member>
        <member name="M:MySoft.Data.Entity.Detach(MySoft.Data.Field[])">
            <summary>
            将实体置为插入状态并移除指定的列
            </summary>
            <param name="removeFields"></param>
        </member>
        <member name="M:MySoft.Data.Entity.Attach(MySoft.Data.ExcludeField)">
            <summary>
            将实体置为修改状态并移除指定的列
            </summary>
            <param name="removeField"></param>
        </member>
        <member name="M:MySoft.Data.Entity.Detach(MySoft.Data.ExcludeField)">
            <summary>
            将实体置为插入状态并移除指定的列
            </summary>
            <param name="removeField"></param>
        </member>
        <member name="M:MySoft.Data.Entity.AttachAll">
            <summary>
            将实体置为修改状态(所有字段)
            </summary>
        </member>
        <member name="M:MySoft.Data.Entity.DetachAll">
            <summary>
            将实体置为插入状态(所有字段)
            </summary>
        </member>
        <member name="M:MySoft.Data.Entity.AttachAll(MySoft.Data.Field[])">
            <summary>
            将实体置为修改状态并移除指定的列(所有字段)
            </summary>
            <param name="removeFields"></param>
        </member>
        <member name="M:MySoft.Data.Entity.DetachAll(MySoft.Data.Field[])">
            <summary>
            将实体置为插入状态并移除指定的列(所有字段)
            </summary>
            <param name="removeFields"></param>
        </member>
        <member name="M:MySoft.Data.Entity.AttachAll(MySoft.Data.ExcludeField)">
            <summary>
            将实体置为修改状态并移除指定的列(所有字段)
            </summary>
            <param name="removeField"></param>
        </member>
        <member name="M:MySoft.Data.Entity.DetachAll(MySoft.Data.ExcludeField)">
            <summary>
            将实体置为插入状态并移除指定的列(所有字段)
            </summary>
            <param name="removeField"></param>
        </member>
        <member name="M:MySoft.Data.Entity.GetFields(MySoft.Data.FieldType)">
            <summary>
            获取字段列表
            </summary>
            <param name="fieldType"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Entity.RemoveFields(MySoft.Data.Field[])">
            <summary>
            获取全部中去除某些字段的列表
            </summary>
            <param name="removeFields"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Entity.GetFieldValues">
            <summary>
            获取字段及值
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Entity.OnPropertyValueChange(MySoft.Data.Field,System.Object,System.Object)">
            <summary>
            增加单个属性到修改列表
            </summary>
            <param name="field"></param>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:MySoft.Data.Entity.AddFieldsToUpdate(System.Collections.Generic.IList{MySoft.Data.Field})">
            <summary>
            添加字段到修改列表
            </summary>
            <param name="fields"></param>
        </member>
        <member name="M:MySoft.Data.Entity.RemoveFieldsToUpdate(System.Collections.Generic.IList{MySoft.Data.Field})">
            <summary>
            移除字段到修改列表
            </summary>
            <param name="fields"></param>
        </member>
        <member name="M:MySoft.Data.Entity.RemoveFieldsToInsert(System.Collections.Generic.IList{MySoft.Data.Field})">
            <summary>
            移除字段到修改列表
            </summary>
            <param name="fields"></param>
        </member>
        <member name="M:MySoft.Data.Entity.GetSequence">
            <summary>
            返回标识列的名称（如Oracle中Sequence.nextval）
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Entity.GetIdentityField">
            <summary>
            获取标识列
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Entity.GetPrimaryKeyFields">
            <summary>
            获取主键列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Entity.GetFields">
            <summary>
            获取字段列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Entity.GetValues">
            <summary>
            获取属性值
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Entity.GetReadOnly">
            <summary>
            获取只读属性
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Entity.GetTable">
            <summary>
            获取表名
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Entity.SetValues(MySoft.Data.IRowReader)">
            <summary>
            设置属性值
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:MySoft.Data.Entity.SetPropertyValues(MySoft.Data.IRowReader)">
            <summary>
            用于设置额外的值
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:MySoft.Data.Entity.SetAllValues(MySoft.Data.IRowReader)">
            <summary>
            设置所有的值
            </summary>
            <param name="reader"></param>
        </member>
        <member name="P:MySoft.Data.Entity.SequenceName">
            <summary>
            获取系列的名称
            </summary>
        </member>
        <member name="P:MySoft.Data.Entity.Fields">
            <summary>
            获取字段列表
            </summary>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.Entity.PagingField">
            <summary>
            获取排序或分页字段
            </summary>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.Entity.IdentityField">
            <summary>
            获取标识列
            </summary>
        </member>
        <member name="T:MySoft.Data.FieldType">
            <summary>
            字段类型枚举
            </summary>
        </member>
        <member name="F:MySoft.Data.FieldType.All">
            <summary>
            所有字段
            </summary>
        </member>
        <member name="F:MySoft.Data.FieldType.NotPrimaryKey">
            <summary>
            非主键列
            </summary>
        </member>
        <member name="F:MySoft.Data.FieldType.NotIdentity">
            <summary>
            非标识列
            </summary>
        </member>
        <member name="F:MySoft.Data.FieldType.PrimaryKey">
            <summary>
            主键字段
            </summary>
        </member>
        <member name="F:MySoft.Data.FieldType.Identity">
            <summary>
            标识字段
            </summary>
        </member>
        <member name="T:MySoft.Data.SqlServer.SqlServerProvider">
            <summary>
            SQL Server 2000 驱动
            </summary>
        </member>
        <member name="M:MySoft.Data.SqlServer.SqlServerProvider.GetLog(System.Data.Common.DbCommand)">
            <summary>
            获取输出日志
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:MySoft.Data.SqlServer.SqlServerProvider.CreateParameter(System.String,System.Object)">
            <summary>
            创建DbParameter
            </summary>
            <param name="parameterName"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SqlServer.SqlServerProvider.PrepareCommand(System.Data.Common.DbCommand)">
            <summary>
            调整DbCommand
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.SqlServer.SqlServerProvider.SupportBatch">
            <summary>
            是否支持批处理
            </summary>
        </member>
        <member name="P:MySoft.Data.SqlServer.SqlServerProvider.RowAutoID">
            <summary>
            返回自动ID的sql语句
            </summary>
        </member>
        <member name="T:MySoft.Data.SQLParameter">
            <summary>
            SQL命令的参数
            </summary>
        </member>
        <member name="M:MySoft.Data.SQLParameter.#ctor(System.String)">
            <summary>
            初始化OrmParameter
            </summary>
            <param name="pName"></param>
        </member>
        <member name="M:MySoft.Data.SQLParameter.#ctor(System.String,System.Object)">
            <summary>
            初始化OrmParameter
            </summary>
            <param name="pName"></param>
            <param name="pValue"></param>
        </member>
        <member name="P:MySoft.Data.SQLParameter.Name">
            <summary>
            参数名
            </summary>
        </member>
        <member name="P:MySoft.Data.SQLParameter.Value">
            <summary>
            参数值
            </summary>
        </member>
        <member name="T:MySoft.Data.JoinType">
            <summary>
            连接类型
            </summary>
        </member>
        <member name="F:MySoft.Data.JoinType.LeftJoin">
            <summary>
            左链接
            </summary>
        </member>
        <member name="F:MySoft.Data.JoinType.RightJoin">
            <summary>
            右链接
            </summary>
        </member>
        <member name="F:MySoft.Data.JoinType.InnerJoin">
            <summary>
            内部链接
            </summary>
        </member>
        <member name="M:MySoft.Data.IPaging.Prefix(System.String)">
            <summary>
            设置前缀
            </summary>
            <param name="prefix"></param>
        </member>
        <member name="M:MySoft.Data.IPaging.Suffix(System.String)">
            <summary>
            设置后缀
            </summary>
            <param name="suffix"></param>
        </member>
        <member name="M:MySoft.Data.IPaging.End(System.String)">
            <summary>
            设置结尾
            </summary>
            <param name="end"></param>
        </member>
        <member name="M:MySoft.Data.DbSession.#ctor(System.String)">
            <summary>
             指定配制节名实例化一个Session会话
            </summary>
            <param name="connectName"></param>
        </member>
        <member name="M:MySoft.Data.DbSession.#ctor(MySoft.Data.DbProvider)">
            <summary>
            指定驱动实例化一个Session会话
            </summary>
            <param name="dbProvider"></param>
        </member>
        <member name="M:MySoft.Data.DbSession.SetDefault(System.String)">
            <summary>
            设置指定配制节名Session会话为默认会话
            </summary>
            <param name="connectName"></param>
        </member>
        <member name="M:MySoft.Data.DbSession.SetDefault(MySoft.Data.DbProvider)">
            <summary>
            设置指定驱动Session会话为默认会话
            </summary>
            <param name="dbProvider"></param>
        </member>
        <member name="M:MySoft.Data.DbSession.BeginTrans">
            <summary>
            开始一个事务
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.BeginTrans(System.Data.IsolationLevel)">
            <summary>
            开始一个事务
            </summary>
            <param name="isolationLevel"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.SetTransaction(System.Data.Common.DbTransaction)">
            <summary>
            设置一个外部事务
            </summary>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.BeginTransaction">
            <summary>
            开始一个外部事务
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            开始一个外部事务
            </summary>
            <param name="isolationLevel"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.SetConnection(System.Data.Common.DbConnection)">
            <summary>
            设置一个外部链接
            </summary>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.CreateConnection">
            <summary>
            创建一个外部连接
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Decrypt(System.String)">
            <summary>
            解密ConnectionString
            </summary>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.CacheOn">
            <summary>
            开启Cache
            </summary>
        </member>
        <member name="M:MySoft.Data.DbSession.CacheOff">
            <summary>
            关闭Cache
            </summary>
        </member>
        <member name="M:MySoft.Data.DbSession.RemoveCache``1">
            <summary>
            移除entityType对应cache
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:MySoft.Data.DbSession.RemoveAllCache">
            <summary>
            移除所有cache
            </summary>
        </member>
        <member name="M:MySoft.Data.DbSession.RegisterSqlLogger(MySoft.Data.LogHandler)">
            <summary>
            注册一个日志事件
            </summary>
            <param name="handler"></param>
        </member>
        <member name="M:MySoft.Data.DbSession.UnregisterSqlLogger(MySoft.Data.LogHandler)">
            <summary>
            取消一个日志事件
            </summary>
            <param name="handler"></param>
        </member>
        <member name="M:MySoft.Data.DbSession.Single``1(MySoft.Data.Table,System.Object[])">
            <summary>
            按主键获取一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Single``1(MySoft.Data.Table,MySoft.Data.WhereClip)">
            <summary>
            按条件获取一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Exists``1(MySoft.Data.Table,``0)">
            <summary>
            是否存在指定的实体，按主键匹配
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Exists``1(MySoft.Data.Table,System.Object[])">
            <summary>
            是否存在指定主键的记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Exists``1(MySoft.Data.Table,MySoft.Data.WhereClip)">
            <summary>
            是否存在指定条件的记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Count``1(MySoft.Data.Table,MySoft.Data.WhereClip)">
            <summary>
            按条件获取记录条数
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Sum``1(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Sum操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Avg``1(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Avg操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Max``1(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Max操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Min``1(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Min操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Sum``2(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Sum操作
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Avg``2(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Avg操作
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Max``2(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Max操作
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Min``2(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Min操作
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Single``1(System.Object[])">
            <summary>
            按主键获取一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Single``1(MySoft.Data.WhereClip)">
            <summary>
            按条件获取一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Exists``1(``0)">
            <summary>
            是否存在指定的实体，按主键匹配
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Exists``1(System.Object[])">
            <summary>
            是否存在指定主键的记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Exists``1(MySoft.Data.WhereClip)">
            <summary>
            是否存在指定条件的记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Count``1(MySoft.Data.WhereClip)">
            <summary>
            按条件获取记录条数
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Sum``1(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Sum操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Avg``1(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Avg操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Max``1(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Max操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Min``1(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Min操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Sum``2(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Sum操作
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Avg``2(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Avg操作
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Max``2(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Max操作
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Min``2(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Min操作
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.From``1">
            <summary>
            返回一个From节
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.From``1(MySoft.Data.Table)">
            <summary>
            返回一个From节
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.From``1(System.String)">
            <summary>
            返回一个From节，并可指定其别名
            </summary>
            <typeparam name="T"></typeparam>
            <param name="aliasName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.FromSql(System.String,MySoft.Data.SQLParameter[])">
            <summary>
            返回一个Sql节
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.FromProc(System.String,MySoft.Data.SQLParameter[])">
            <summary>
            返回一个Proc节
            </summary>
            <param name="procName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Excute(MySoft.Data.InsertCreator)">
            <summary>
            插入数据
            </summary>
            <param name="creator"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Excute``1(MySoft.Data.InsertCreator,``0@)">
            <summary>
             插入数据
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="creator"></param>
            <param name="identityValue"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Excute(MySoft.Data.DeleteCreator)">
            <summary>
            按条件删除指定记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="creator"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Excute(MySoft.Data.UpdateCreator)">
            <summary>
            更新数据
            </summary>
            <param name="creator"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.From(MySoft.Data.QueryCreator)">
            <summary>
             返回一个Query节
            </summary>
            <param name="creator"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.BeginBatch">
            <summary>
            返回一个Batch
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.BeginBatch(System.Int32)">
            <summary>
            返回一个Batch
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Save``1(MySoft.Data.Table,``0)">
            <summary>
            保存一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Insert``1(MySoft.Data.Table,MySoft.Data.Field[],System.Object[])">
            <summary>
             插入一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Insert``1(MySoft.Data.Table,MySoft.Data.Field[],System.Object[],System.Object@)">
            <summary>
             插入一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Delete``1(MySoft.Data.Table,``0)">
            <summary>
            删除一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Delete``1(MySoft.Data.Table,System.Object[])">
            <summary>
            删除指定主键的记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Delete``1(MySoft.Data.Table,MySoft.Data.WhereClip)">
            <summary>
            删除符合条件的记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.InsertOrUpdate``1(MySoft.Data.Table,``0)">
            <summary>
            插入或更新
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Update``1(MySoft.Data.Table,MySoft.Data.Field,System.Object,MySoft.Data.WhereClip)">
            <summary>
            更新指定条件的记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="value"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Update``1(MySoft.Data.Table,MySoft.Data.Field[],System.Object[],MySoft.Data.WhereClip)">
            <summary>
            更新指定条件的记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Save``1(``0)">
            <summary>
            保存一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Insert``1(MySoft.Data.Field[],System.Object[])">
            <summary>
             插入一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Insert``1(MySoft.Data.Field[],System.Object[],System.Object@)">
            <summary>
             插入一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Delete``1(``0)">
            <summary>
            删除一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Delete``1(System.Object[])">
            <summary>
            按主键删除指定记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Delete``1(MySoft.Data.WhereClip)">
            <summary>
            按条件删除指定记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.InsertOrUpdate``1(``0)">
            <summary>
            插入或更新
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Update``1(MySoft.Data.Field,System.Object,MySoft.Data.WhereClip)">
            <summary>
            按条件更新指定记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="value"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Update``1(MySoft.Data.Field[],System.Object[],MySoft.Data.WhereClip)">
            <summary>
            按条件更新指定记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Serialization(MySoft.Data.WhereClip)">
            <summary>
            返回最终条件的SQL
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbSession.Serialization(MySoft.Data.OrderByClip)">
            <summary>
            返回最终排序的SQL
            </summary>
            <param name="order"></param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.ISourceReader">
            <summary>
            读数据接口
            </summary>
        </member>
        <member name="T:MySoft.Data.IListConvert`1">
            <summary>
            列表转换
            </summary>
        </member>
        <member name="M:MySoft.Data.IListConvert`1.ConvertTo``1">
            <summary>
            返回另一类型的列表
            </summary>
            <typeparam name="TOutput"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IListConvert`1.ConvertTo``2">
            <summary>
            返回另一类型的列表(输出为接口)
            </summary>
            <typeparam name="TOutput"></typeparam>
            <typeparam name="IOutput"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IListConvert`1.ConvertAll``1(System.Converter{`0,``0})">
            <summary>
            将当前类型转成另一种类型
            </summary>
            <typeparam name="TOutput"></typeparam>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.IRowReader">
            <summary>
            行数据阅读器
            </summary>
        </member>
        <member name="M:MySoft.Data.IRowReader.IsDBNull(System.Int32)">
            <summary>
            判断数据是否为null
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetValue(System.Int32)">
            <summary>
            返回object
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetValue``1(System.Int32)">
            <summary>
            返回指定类型的数据
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.IsDBNull(System.String)">
            <summary>
            判断数据是否为null
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetValue(System.String)">
            <summary>
            返回object
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetValue``1(System.String)">
            <summary>
            返回指定类型的数据
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetString(System.String)">
            <summary>
            获取string
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetBytes(System.String)">
            <summary>
            获取byte[]
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetInt16(System.String)">
            <summary>
            获取short
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetInt32(System.String)">
            <summary>
            获取int
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetInt64(System.String)">
            <summary>
            获取long
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetDecimal(System.String)">
            <summary>
            获取decimal
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetDouble(System.String)">
            <summary>
            获取double
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetFloat(System.String)">
            <summary>
            获取float
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetByte(System.String)">
            <summary>
            获取byte
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetBoolean(System.String)">
            <summary>
            获取bool
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetDateTime(System.String)">
            <summary>
            获取DateTime
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetGuid(System.String)">
            <summary>
            获取Guid
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.IsDBNull(MySoft.Data.Field)">
            <summary>
            判断数据是否为null
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetValue(MySoft.Data.Field)">
            <summary>
            返回object
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetValue``1(MySoft.Data.Field)">
            <summary>
            返回指定类型的数据
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetString(MySoft.Data.Field)">
            <summary>
            获取string
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetBytes(MySoft.Data.Field)">
            <summary>
            获取byte[]
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetInt16(MySoft.Data.Field)">
            <summary>
            获取short
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetInt32(MySoft.Data.Field)">
            <summary>
            获取int
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetInt64(MySoft.Data.Field)">
            <summary>
            获取long
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetDecimal(MySoft.Data.Field)">
            <summary>
            获取decimal
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetDouble(MySoft.Data.Field)">
            <summary>
            获取double
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetFloat(MySoft.Data.Field)">
            <summary>
            获取float
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetByte(MySoft.Data.Field)">
            <summary>
            获取byte
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetBoolean(MySoft.Data.Field)">
            <summary>
            获取bool
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetDateTime(MySoft.Data.Field)">
            <summary>
            获取DateTime
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.IRowReader.GetGuid(MySoft.Data.Field)">
            <summary>
            获取Guid
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.IRowReader.DataSource">
            <summary>
            获取当前DataSource
            </summary>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.IRowReader.Item(System.Int32)">
            <summary>
            按索引获取值
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.IRowReader.Item(System.String)">
            <summary>
            按名称获取值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ISourceReader.Close">
            <summary>
            关闭DbReader
            </summary>
        </member>
        <member name="M:MySoft.Data.ISourceReader.Read">
            <summary>
            读取数据
            </summary>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.ISourceReader.FieldCount">
            <summary>
            获取字段数
            </summary>
        </member>
        <member name="F:MySoft.Data.CacheConfigurationSection.DEFAULT_EXPIRE_SECONDS">
            <summary>
            默认过期时间为60秒
            </summary>
        </member>
        <member name="T:MySoft.Data.PageSection">
            <summary>
            分页器
            </summary>
        </member>
        <member name="M:MySoft.Data.PageSection.ToReader(System.Int32)">
            <summary>
            返回ISourceReader
            </summary>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.PageSection.ToList``1(System.Int32)">
            <summary>
            返回IArrayList
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.PageSection.ToTable(System.Int32)">
            <summary>
            返回DataTable
            </summary>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.PageSection.PageCount">
            <summary>
            返回页数
            </summary>
        </member>
        <member name="P:MySoft.Data.PageSection.RowCount">
            <summary>
            返回记录数
            </summary>
        </member>
        <member name="M:MySoft.Data.FromSection`1.GetPage``1(System.Int32)">
            <summary>
            返回一个分页处理的Page节
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToSingle``1">
            <summary>
            返回一个实体
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.SubQuery">
            <summary>
            生成一个子查询
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.SubQuery(System.String)">
            <summary>
            生成一个子查询
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.SubQuery``1">
            <summary>
            生成一个子查询
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.SubQuery``1(System.String)">
            <summary>
            生成一个带别名的子查询
            </summary>
            <param name="aliasName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.GroupBy(MySoft.Data.GroupByClip)">
            <summary>
            进行GroupBy操作
            </summary>
            <param name="groupBy"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.OrderBy(MySoft.Data.OrderByClip)">
            <summary>
            进行OrderBy操作
            </summary>
            <param name="orderBy"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.Select(MySoft.Data.Field[])">
            <summary>
            选择输出的列
            </summary>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.Select(MySoft.Data.ExcludeField)">
            <summary>
            选择被排除以外的列（用于列多时排除某几列的情况）
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.Where(MySoft.Data.WhereClip)">
            <summary>
            注入当前查询的条件
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.Union(MySoft.Data.QuerySection{`0})">
            <summary>
            进行Union操作
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.UnionAll(MySoft.Data.QuerySection{`0})">
            <summary>
            进行Union操作
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.Having(MySoft.Data.WhereClip)">
            <summary>
            进行Having操作
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.SetPagingField(MySoft.Data.Field)">
            <summary>
            设置分页字段
            </summary>
            <param name="pagingField"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.GetTop(System.Int32)">
            <summary>
            选择前n条
            </summary>
            <param name="topSize"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.Distinct">
            <summary>
            进行Distinct操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.GetPage(System.Int32)">
            <summary>
            返回一个分页处理的Page节
            </summary>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToSingle">
            <summary>
            返回一个实体
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToListResult(System.Int32,System.Int32)">
            <summary>
            返回一个Object列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToListResult">
            <summary>
            返回一个Object列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToListResult``1(System.Int32,System.Int32)">
            <summary>
            返回一个Object列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToListResult``1">
            <summary>
            返回一个Object列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToReader(System.Int32,System.Int32)">
            <summary>
            返回一个DbReader
            </summary>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToReader">
            <summary>
            返回一个DbReader
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToList">
            <summary>
            返回IArrayList
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToList(System.Int32,System.Int32)">
            <summary>
            返回IArrayList
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToList``1">
            <summary>
            返回IArrayList
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToList``1(System.Int32,System.Int32)">
            <summary>
            返回IArrayList
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToTable(System.Int32,System.Int32)">
            <summary>
            返回一个DataTable
            </summary>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToTable">
            <summary>
            返回一个DataTable
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToScalar``1">
            <summary>
            返回一个值
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToScalar">
            <summary>
            返回一个值
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.Count">
            <summary>
            返回当前查询记录数
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.FromSection`1.ToTablePage(System.Int32,System.Int32)">
            <summary>
            返回指定数据源的分页信息
            </summary>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.PageSection`1.ToListResult(System.Int32)">
            <summary>
            返回一个Object列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.PageSection`1.ToListResult``1(System.Int32)">
            <summary>
            返回一个Object列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.PageSection`1.ToSingle(System.Int32)">
            <summary>
            返回一个实体
            </summary>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.PageSection`1.ToReader(System.Int32)">
            <summary>
            返回一个DbReader
            </summary>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.PageSection`1.ToTable(System.Int32)">
            <summary>
            返回一个DataTable
            </summary>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.PageSection`1.ToList(System.Int32)">
            <summary>
            返回一个IArrayList
            </summary>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.PageSection`1.PageCount">
            <summary>
            返回页数
            </summary>
        </member>
        <member name="P:MySoft.Data.PageSection`1.RowCount">
            <summary>
            返回记录数
            </summary>
        </member>
        <member name="T:MySoft.Data.DbBatch">
            <summary>
            批处理
            </summary>
        </member>
        <member name="M:MySoft.Data.IDbBatch.Process">
            <summary>
            执行批处理操作
            </summary>
        </member>
        <member name="M:MySoft.Data.IDbBatch.Process(System.Collections.Generic.IList{MySoft.Data.MySoftException}@)">
            <summary>
            执行批处理操作
            </summary>
            <param name="errors">输出的错误</param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbBatch.Process">
            <summary>
            执行批处理操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbBatch.Process(System.Collections.Generic.IList{MySoft.Data.MySoftException}@)">
            <summary>
            执行批处理操作
            </summary>
            <param name="errors">输出的错误</param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbBatch.Save``1(MySoft.Data.Table,``0)">
            <summary>
            保存一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbBatch.Insert``1(MySoft.Data.Table,MySoft.Data.Field[],System.Object[])">
            <summary>
             插入一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbBatch.Insert``1(MySoft.Data.Table,MySoft.Data.Field[],System.Object[],System.Object@)">
            <summary>
             插入一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbBatch.AddCommand(System.Data.Common.DbCommand)">
            <summary>
            添加命令到队列中
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="M:MySoft.Data.DbBatch.Insert``1(MySoft.Data.Table,System.Collections.Generic.List{MySoft.Data.FieldValue},System.Object@)">
            <summary>
            插入值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="table"></param>
            <param name="fvlist"></param>
            <param name="retVal"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbBatch.Update``1(MySoft.Data.Table,System.Collections.Generic.List{MySoft.Data.FieldValue},MySoft.Data.WhereClip)">
            <summary>
            保存一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="table"></param>
            <param name="fvlist"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbBatch.Delete``1(MySoft.Data.Table,``0)">
            <summary>
            删除一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbBatch.Delete``1(MySoft.Data.Table,System.Object[])">
            <summary>
            按主键删除指定记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbBatch.InsertOrUpdate``1(MySoft.Data.Table,``0)">
            <summary>
            插入或更新
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbBatch.Save``1(``0)">
            <summary>
            保存一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbBatch.Insert``1(MySoft.Data.Field[],System.Object[])">
            <summary>
             插入一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbBatch.Insert``1(MySoft.Data.Field[],System.Object[],System.Object@)">
            <summary>
             插入一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbBatch.Delete``1(``0)">
            <summary>
            删除一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbBatch.Delete``1(System.Object[])">
            <summary>
            按主键删除指定记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbBatch.InsertOrUpdate``1(``0)">
            <summary>
            插入或更新
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbBatch.Exists``1(MySoft.Data.Table,``0)">
            <summary>
            判断记录是否存在
            </summary>
            <typeparam name="T"></typeparam>
            <param name="table"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.SourceReader">
            <summary>
            自定义数据记录
            </summary>
        </member>
        <member name="M:MySoft.Data.SourceReader.#ctor(System.Data.IDataReader)">
            <summary>
            初始化DbReader
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:MySoft.Data.SourceReader.Read">
            <summary>
            读取下一条数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.Close">
            <summary>
            关闭DbReader
            </summary>
        </member>
        <member name="M:MySoft.Data.SourceReader.IsDBNull(System.Int32)">
            <summary>
            判断数据是否为null
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetValue(System.Int32)">
            <summary>
            返回object
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetValue``1(System.Int32)">
            <summary>
            返回指定类型的数据
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.IsDBNull(System.String)">
            <summary>
            判断数据是否为null
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetValue(System.String)">
            <summary>
            返回object
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetValue``1(System.String)">
            <summary>
            返回指定类型的数据
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetString(System.String)">
            <summary>
            获取string
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetBytes(System.String)">
            <summary>
            获取byte[]
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetInt16(System.String)">
            <summary>
            获取short
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetInt32(System.String)">
            <summary>
            获取int
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetInt64(System.String)">
            <summary>
            获取long
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetDecimal(System.String)">
            <summary>
            获取decimal
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetDouble(System.String)">
            <summary>
            获取double
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetFloat(System.String)">
            <summary>
            获取float
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetByte(System.String)">
            <summary>
            获取byte
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetBoolean(System.String)">
            <summary>
            获取bool
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetDateTime(System.String)">
            <summary>
            获取DateTime
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetGuid(System.String)">
            <summary>
            获取Guid
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.IsDBNull(MySoft.Data.Field)">
            <summary>
            判断数据是否为null
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetValue(MySoft.Data.Field)">
            <summary>
            返回object
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetValue``1(MySoft.Data.Field)">
            <summary>
            返回指定类型的数据
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetString(MySoft.Data.Field)">
            <summary>
            获取string
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetBytes(MySoft.Data.Field)">
            <summary>
            获取byte[]
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetInt16(MySoft.Data.Field)">
            <summary>
            获取short
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetInt32(MySoft.Data.Field)">
            <summary>
            获取int
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetInt64(MySoft.Data.Field)">
            <summary>
            获取long
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetDecimal(MySoft.Data.Field)">
            <summary>
            获取decimal
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetDouble(MySoft.Data.Field)">
            <summary>
            获取double
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetFloat(MySoft.Data.Field)">
            <summary>
            获取float
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetByte(MySoft.Data.Field)">
            <summary>
            获取byte
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetBoolean(MySoft.Data.Field)">
            <summary>
            获取bool
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetDateTime(MySoft.Data.Field)">
            <summary>
            获取DateTime
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.GetGuid(MySoft.Data.Field)">
            <summary>
            获取Guid
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.ConvertTo``1">
            <summary>
            返回指定类型的List
            </summary>
            <typeparam name="TOutput"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.ConvertTo``2">
            <summary>
            返回另一类型的列表(输入为类、输出为接口，用于实体的解耦)
            </summary>
            <typeparam name="TOutput"></typeparam>
            <typeparam name="IOutput"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceReader.ConvertAll``1(System.Converter{MySoft.Data.IRowReader,``0})">
            <summary>
            通过委托来创建实体
            </summary>
            <typeparam name="TOutput"></typeparam>
            <param name="handler"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.SourceReader.FieldCount">
            <summary>
            获取字段数
            </summary>
        </member>
        <member name="P:MySoft.Data.SourceReader.DataSource">
            <summary>
            获取当前DataSource
            </summary>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.SourceReader.Item(System.Int32)">
            <summary>
            按索引获取值
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.SourceReader.Item(System.String)">
            <summary>
            按名称获取值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.ISourceTable">
            <summary>
            数据源接口
            </summary>
        </member>
        <member name="M:MySoft.Data.ISourceTable.Clone">
            <summary>
            克隆Table
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ISourceTable.Select(System.String[])">
            <summary>
            选择某些列
            </summary>
            <param name="names"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ISourceTable.Filter(System.String)">
            <summary>
            过虑数据
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ISourceTable.Sort(System.String)">
            <summary>
            排序数据
            </summary>
            <param name="sort"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ISourceTable.Add(System.String,System.Type)">
            <summary>
            添加列
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ISourceTable.Add(System.String,System.Type,System.String)">
            <summary>
            添加列
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ISourceTable.SetOrdinal(System.String,System.Int32)">
            <summary>
            设置列的顺序
            </summary>
            <param name="name"></param>
            <param name="index"></param>
        </member>
        <member name="M:MySoft.Data.ISourceTable.Rename(System.String,System.String)">
            <summary>
            字段更名
            </summary>
            <param name="oldname"></param>
            <param name="newname"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ISourceTable.Revalue``1(System.String,System.String,MySoft.Data.ReturnValue{``0})">
            <summary>
            按要求改变某列值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="readName"></param>
            <param name="changeName"></param>
            <param name="revalue"></param>
        </member>
        <member name="M:MySoft.Data.ISourceTable.Remove(System.String[])">
            <summary>
            移除指定的列
            </summary>
            <param name="names"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ISourceTable.Fill(MySoft.Data.TableRelation,System.String[])">
            <summary>
            将另一个表中的某字段值按字段关联后进行填充
            </summary>
            <param name="relation"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.ISourceTable.RowCount">
            <summary>
            获取数据行数
            </summary>
        </member>
        <member name="P:MySoft.Data.ISourceTable.ColumnCount">
            <summary>
            获取数据列数
            </summary>
        </member>
        <member name="P:MySoft.Data.ISourceTable.Item(System.Int32)">
            <summary>
            获取行
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SqlSection.AddParameters(System.Data.Common.DbParameter[])">
            <summary>
            增加多个参数到当前Sql命令
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SqlSection.AddInputParameter(System.String,System.Data.DbType,System.Object)">
            <summary>
            增加一个输入参数到当前Sql命令
            </summary>
            <param name="paramName"></param>
            <param name="dbType"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SqlSection.AddInputParameter(System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            增加一个输入参数到当前Sql命令
            </summary>
            <param name="paramName"></param>
            <param name="dbType"></param>
            <param name="size"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SqlSection.Execute">
            <summary>
            执行当前Sql命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SqlSection.ToSingle``1">
            <summary>
            执行当前Sql命令并返回一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SqlSection.ToList``1">
            <summary>
            执行当前Sql命令并返回一个List列表
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SqlSection.ToListResult``1">
            <summary>
            执行当前Proc并返回一个列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SqlSection.ToReader">
            <summary>
            执行当前Sql命令并返回一个DbReader
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SqlSection.ToTable">
            <summary>
            执行当前Sql命令并返回一个DataTable
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SqlSection.ToDataSet">
            <summary>
            执行当前Sql命令并返回一个DataSet
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SqlSection.ToScalar">
            <summary>
            执行当前Sql命令并返回一个值
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SqlSection.ToScalar``1">
            <summary>
            执行当前
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.IDataPage">
            <summary>
            
            </summary>
        </member>
        <member name="P:MySoft.Data.IDataPage.PageSize">
            <summary>
            获取或设置页大小
            </summary>
        </member>
        <member name="P:MySoft.Data.IDataPage.RowCount">
            <summary>
            获取或设置记录数
            </summary>
        </member>
        <member name="P:MySoft.Data.IDataPage.CurrentPageIndex">
            <summary>
            获取或设置页序数
            </summary>
        </member>
        <member name="P:MySoft.Data.IDataPage.PageCount">
            <summary>
            获取或设置页数
            </summary>
        </member>
        <member name="P:MySoft.Data.IDataPage.IsFirstPage">
            <summary>
             获取一个值，该值指示当前页是否是首页
            </summary>
        </member>
        <member name="P:MySoft.Data.IDataPage.IsLastPage">
            <summary>
            获取一个值，该值指示当前页是否是最后一页
            </summary>
        </member>
        <member name="P:MySoft.Data.IDataPage.CurrentRowCount">
            <summary>
            获取当前数据源的记录数
            </summary>
        </member>
        <member name="P:MySoft.Data.IDataPage.CurrentStartIndex">
            <summary>
            获取开始记录数
            </summary>
        </member>
        <member name="P:MySoft.Data.IDataPage.CurrentEndIndex">
            <summary>
            获取结束记录数
            </summary>
        </member>
        <member name="P:MySoft.Data.IDataPage.DataSource">
            <summary>
            获取或设置当前页的数据源
            </summary>
        </member>
        <member name="P:MySoft.Data.IDataPage`1.DataSource">
            <summary>
            获取或设置当前页的数据源
            </summary>
        </member>
        <member name="T:MySoft.Data.DataCache">
            <summary>
            缓存相关的操作类
            </summary>
        </member>
        <member name="M:MySoft.Data.DataCache.GetCache(System.String)">
            <summary>
            获取当前应用程序指定CacheKey的Cache值
            </summary>
            <param name="CacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DataCache.SetCache(System.String,System.Object)">
            <summary>
            设置当前应用程序指定CacheKey的Cache值
            </summary>
            <param name="CacheKey"></param>
            <param name="obj"></param>
        </member>
        <member name="M:MySoft.Data.DataCache.SetCache(System.String,System.String,System.Object)">
            <summary>
            设置当前应用程序指定CacheKey的Cache值
            </summary>
            <param name="CacheKey"></param>
            <param name="obj"></param>
        </member>
        <member name="T:MySoft.Data.ReturnValue`1">
            <summary>
            获取返回值的委托
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.TableRelation">
            <summary>
            表信息填充关系
            </summary>
        </member>
        <member name="M:MySoft.Data.TableRelation.#ctor">
            <summary>
            实例化填充关系
            </summary>
        </member>
        <member name="M:MySoft.Data.TableRelation.#ctor(MySoft.Data.ISourceTable,System.String)">
            <summary>
            实例化填充关系
            </summary>
            <param name="source"></param>
            <param name="relationName"></param>
        </member>
        <member name="M:MySoft.Data.TableRelation.#ctor(MySoft.Data.ISourceTable,System.String,System.String)">
            <summary>
            实例化填充关系
            </summary>
            <param name="source"></param>
            <param name="relationName"></param>
        </member>
        <member name="P:MySoft.Data.TableRelation.DataSource">
            <summary>
            填充用到的数据源
            </summary>
        </member>
        <member name="P:MySoft.Data.TableRelation.ParentName">
            <summary>
            关联的数据列
            </summary>
        </member>
        <member name="P:MySoft.Data.TableRelation.ChildName">
            <summary>
            关联的数据列
            </summary>
        </member>
        <member name="T:MySoft.Data.SourceTable">
            <summary>
            数据源
            </summary>
        </member>
        <member name="M:MySoft.Data.SourceTable.#ctor">
            <summary>
            实例化SourceTable
            </summary>
        </member>
        <member name="M:MySoft.Data.SourceTable.#ctor(System.String)">
            <summary>
            实例化SourceTable
            </summary>
        </member>
        <member name="M:MySoft.Data.SourceTable.#ctor(System.Data.DataRow[])">
            <summary>
            实例化SourceTable
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:MySoft.Data.SourceTable.#ctor(System.Data.DataTable)">
            <summary>
            实例化SourceTable
            </summary>
            <param name="dt"></param>
        </member>
        <member name="M:MySoft.Data.SourceTable.Clone">
            <summary>
            克隆Table
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceTable.Select(System.String[])">
            <summary>
            选择某些列
            </summary>
            <param name="names"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceTable.Filter(System.String)">
            <summary>
            过虑数据
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceTable.Sort(System.String)">
            <summary>
            排序数据
            </summary>
            <param name="sort"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceTable.Remove(System.String[])">
            <summary>
            移除指定的列
            </summary>
            <param name="names"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceTable.SetOrdinal(System.String,System.Int32)">
            <summary>
            设置列的顺序
            </summary>
            <param name="name"></param>
            <param name="index"></param>
        </member>
        <member name="M:MySoft.Data.SourceTable.Add(System.String,System.Type)">
            <summary>
            添加列
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceTable.Add(System.String,System.Type,System.String)">
            <summary>
            添加列
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceTable.Rename(System.String,System.String)">
            <summary>
            字段更名
            </summary>
            <param name="oldname"></param>
            <param name="newname"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceTable.Revalue``1(System.String,System.String,MySoft.Data.ReturnValue{``0})">
            <summary>
            按要求改变某列值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="readName"></param>
            <param name="changeName"></param>
            <param name="revalue"></param>
        </member>
        <member name="M:MySoft.Data.SourceTable.Fill(MySoft.Data.TableRelation,System.String[])">
            <summary>
            将另一个表中的某字段值按字段关联后进行填充
            </summary>
            <param name="relation"></param>
            <param name="fillNames"></param>
        </member>
        <member name="M:MySoft.Data.SourceTable.ConvertTo``1">
            <summary>
            返回指定类型的List
            </summary>
            <typeparam name="TOutput"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceTable.ConvertTo``2">
            <summary>
            返回另一类型的列表(输入为类、输出为接口，用于实体的解耦)
            </summary>
            <typeparam name="TOutput"></typeparam>
            <typeparam name="IOutput"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceTable.ConvertAll``1(System.Converter{MySoft.Data.IRowReader,``0})">
            <summary>
            返回指定类型的List
            </summary>
            <typeparam name="TOutput"></typeparam>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.SourceTable.RowCount">
            <summary>
            获取数据行数
            </summary>
        </member>
        <member name="P:MySoft.Data.SourceTable.ColumnCount">
            <summary>
            获取数据列数
            </summary>
        </member>
        <member name="P:MySoft.Data.SourceTable.Item(System.Int32)">
            <summary>
            获取行
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.SortProperty">
            <summary>
            排序属性
            </summary>
        </member>
        <member name="P:MySoft.Data.SortProperty.Asc">
            <summary>
            从小到大
            </summary>
        </member>
        <member name="P:MySoft.Data.SortProperty.Desc">
            <summary>
            从大到小
            </summary>
        </member>
        <member name="T:MySoft.Data.SortComparer`1">
            <summary>
            自定义排序算法
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:MySoft.Data.SortComparer`1.#ctor(MySoft.Data.SortProperty[])">
            <summary>
            初始化自定义比较类
            </summary>
            <param name="sorts"></param>
        </member>
        <member name="M:MySoft.Data.SortComparer`1.Compare(`0,`0)">
            <summary>
            实现Compare比较两个值的大小
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SortComparer`1.CompareValue(`0,`0,System.Int32)">
            <summary>
            进行深层排序
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SortComparer`1.CompareProperty(`0,`0,MySoft.Data.SortProperty)">
            <summary>
            比较两个值的大小(从小到大)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x"></param>
            <param name="y"></param>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.CacheConfigInfo">
            <summary>
            缓存配置信息
            </summary>
        </member>
        <member name="T:MySoft.Data.CacheInfo">
            <summary>
            缓存信息
            </summary>
        </member>
        <member name="T:MySoft.Data.TempTable">
            <summary>
            临时的TResult类
            </summary>
        </member>
        <member name="T:MySoft.Data.DeleteCreator">
            <summary>
            删除创建器
            </summary>
        </member>
        <member name="M:MySoft.Data.DeleteCreator.NewCreator">
            <summary>
            创建一个新的删除器
            </summary>
        </member>
        <member name="M:MySoft.Data.DeleteCreator.#ctor">
            <summary>
            实体化DeleteCreator
            </summary>
        </member>
        <member name="M:MySoft.Data.DeleteCreator.From``1">
            <summary>
            设置表信息
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DeleteCreator.From(System.String)">
            <summary>
            设置表名
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="M:MySoft.Data.DeleteCreator.From(MySoft.Data.Table)">
            <summary>
            设置表信息
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:MySoft.Data.DeleteCreator.AddWhere(MySoft.Data.WhereClip)">
            <summary>
            添加一个条件
            </summary>
            <param name="where"></param>
        </member>
        <member name="M:MySoft.Data.DeleteCreator.AddWhere(System.String,MySoft.Data.SQLParameter[])">
            <summary>
            添加一个条件
            </summary>
            <param name="where"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DeleteCreator.AddWhere(MySoft.Data.Field,System.Object)">
            <summary>
            添加一个条件
            </summary>
            <param name="field"></param>
            <param name="value"></param>
        </member>
        <member name="M:MySoft.Data.DeleteCreator.AddWhere(System.String,System.Object)">
            <summary>
            添加一个条件
            </summary>
            <param name="fieldName"></param>
            <param name="value"></param>
        </member>
        <member name="P:MySoft.Data.DeleteCreator.Table">
            <summary>
            返回table
            </summary>
        </member>
        <member name="P:MySoft.Data.DeleteCreator.Where">
            <summary>
            返回条件
            </summary>
        </member>
        <member name="T:MySoft.Data.TableSetting">
            <summary>
            表映射设置
            </summary>
        </member>
        <member name="P:MySoft.Data.TableSetting.Namespace">
            <summary>
            命名空间
            </summary>
        </member>
        <member name="P:MySoft.Data.TableSetting.Prefix">
            <summary>
            表前缀
            </summary>
        </member>
        <member name="P:MySoft.Data.TableSetting.Suffix">
            <summary>
            表后缀
            </summary>
        </member>
        <member name="P:MySoft.Data.TableSetting.Mappings">
            <summary>
            表映射
            </summary>
        </member>
        <member name="T:MySoft.Data.TableMapping">
            <summary>
            表映射节点
            </summary>
        </member>
        <member name="P:MySoft.Data.TableMapping.ClassName">
            <summary>
            类名称
            </summary>
        </member>
        <member name="P:MySoft.Data.TableMapping.UsePrefix">
            <summary>
            使用前缀
            </summary>
        </member>
        <member name="P:MySoft.Data.TableMapping.UseSuffix">
            <summary>
            使用后缀
            </summary>
        </member>
        <member name="P:MySoft.Data.TableMapping.TableName">
            <summary>
            映射的表名
            </summary>
        </member>
        <member name="T:MySoft.Data.EntityConfig">
            <summary>
            映像配置类
            </summary>
        </member>
        <member name="M:MySoft.Data.EntityConfig.RefreshConfig">
            <summary>
            刷新配置
            </summary>
        </member>
        <member name="M:MySoft.Data.EntityConfig.GetMappingTable``1(System.String)">
            <summary>
            获取映射的表
            </summary>
            <typeparam name="T"></typeparam>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.Oracle.OracleProvider">
            <summary>
            Oracle 驱动
            </summary>
        </member>
        <member name="M:MySoft.Data.Oracle.OracleProvider.FormatIdentityName(System.String)">
            <summary>
            格式化IdentityName
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Oracle.OracleProvider.GetLog(System.Data.Common.DbCommand)">
            <summary>
            获取输出日志
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:MySoft.Data.Oracle.OracleProvider.CreateParameter(System.String,System.Object)">
            <summary>
            创建DbParameter
            </summary>
            <param name="parameterName"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Oracle.OracleProvider.PrepareCommand(System.Data.Common.DbCommand)">
            <summary>
            调整DbCommand
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Oracle.OracleProvider.CreatePageQuery``1(MySoft.Data.QuerySection{``0},System.Int32,System.Int32)">
            <summary>
            创建分页
            </summary>
            <typeparam name="T"></typeparam>
            <param name="query"></param>
            <param name="itemCount"></param>
            <param name="skipCount"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.Oracle.OracleProvider.SupportBatch">
            <summary>
            是否支持批处理
            </summary>
        </member>
        <member name="P:MySoft.Data.Oracle.OracleProvider.UseAutoIncrement">
            <summary>
            是否使用自增列
            </summary>
        </member>
        <member name="P:MySoft.Data.Oracle.OracleProvider.RowAutoID">
            <summary>
            返回自动ID的sql语句
            </summary>
        </member>
        <member name="T:MySoft.Data.ProviderType">
            <summary>
            驱动类型
            </summary>
        </member>
        <member name="F:MySoft.Data.ProviderType.Access">
            <summary>
            Access数据库
            </summary>
        </member>
        <member name="F:MySoft.Data.ProviderType.SqlServer">
            <summary>
            SqlServer2000数据库
            </summary>
        </member>
        <member name="F:MySoft.Data.ProviderType.SqlServer9">
            <summary>
            SqlServer2005数据库
            </summary>
        </member>
        <member name="F:MySoft.Data.ProviderType.Oracle">
            <summary>
            Oracle数据库
            </summary>
        </member>
        <member name="F:MySoft.Data.ProviderType.MySql">
            <summary>
            MySql数据库
            </summary>
        </member>
        <member name="F:MySoft.Data.ProviderType.SQLite">
            <summary>
            SQLite数据库
            </summary>
        </member>
        <member name="F:MySoft.Data.ProviderType.FireBird">
            <summary>
            FireBird数据库
            </summary>
        </member>
        <member name="F:MySoft.Data.ProviderType.PostgreSQL">
            <summary>
            PostgreSQL数据库
            </summary>
        </member>
        <member name="T:MySoft.Data.ProviderFactory">
            <summary>
            The db provider factory.
            </summary>
        </member>
        <member name="M:MySoft.Data.ProviderFactory.CreateDbProvider(MySoft.Data.ProviderType,System.String)">
            <summary>
            Creates the db provider.
            </summary>
            <param name="connectionString">Name of the conn STR.</param>
            <returns>The db provider.</returns>
        </member>
        <member name="M:MySoft.Data.ProviderFactory.CreateDbProvider(System.String,System.String,System.String)">
            <summary>
            Creates the db provider.
            </summary>
            <param name="assemblyName">Name of the assembly.</param>
            <param name="className">Name of the class.</param>
            <param name="connectionString">The conn STR.</param>
            <returns>The db provider.</returns>
        </member>
        <member name="M:MySoft.Data.ProviderFactory.CreateDbProvider(System.String)">
            <summary>
            Creates the db provider.
            </summary>
            <param name="connectName">Name of the conn STR.</param>
            <returns>The db provider.</returns>
        </member>
        <member name="M:MySoft.Data.ProviderFactory.CreateDbProvider(System.String,MySoft.Data.ProviderType)">
            <summary>
            Creates the db provider.
            </summary>
            <param name="connStrName">Name of the conn STR.</param>
            <returns>The db provider.</returns>
        </member>
        <member name="P:MySoft.Data.ProviderFactory.Default">
            <summary>
            Gets the default db provider.
            </summary>
            <value>The default.</value>
        </member>
        <member name="T:MySoft.Data.TableJoin">
            <summary>
            TableJoin
            </summary>
        </member>
        <member name="T:MySoft.Data.QueryCreator">
            <summary>
            查询创建器
            </summary>
        </member>
        <member name="M:MySoft.Data.QueryCreator.NewCreator">
            <summary>
            创建一个新的查询器（条件为全部，排序为默认)
            </summary>
        </member>
        <member name="M:MySoft.Data.QueryCreator.#ctor">
            <summary>
            实体化QueryCreater
            </summary>
        </member>
        <member name="M:MySoft.Data.QueryCreator.From``1">
            <summary>
            设置表信息
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QueryCreator.From(System.String)">
            <summary>
            设置表名
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.From(MySoft.Data.Table)">
            <summary>
            设置表信息
            </summary>
            <param name="table"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.Join(System.String,System.String,MySoft.Data.SQLParameter[])">
            <summary>
            关联表信息
            </summary>
            <param name="tableName"></param>
            <param name="where"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QueryCreator.Join(MySoft.Data.Table,MySoft.Data.WhereClip)">
            <summary>
            关联表信息
            </summary>
            <param name="table"></param>
            <param name="where"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.Join``1(System.String,MySoft.Data.SQLParameter[])">
            <summary>
            关联表信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QueryCreator.Join``1(MySoft.Data.WhereClip)">
            <summary>
            关联表信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.Join(MySoft.Data.JoinType,System.String,System.String,MySoft.Data.SQLParameter[])">
            <summary>
            关联表信息
            </summary>
            <param name="tableName"></param>
            <param name="where"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QueryCreator.Join(MySoft.Data.JoinType,MySoft.Data.Table,MySoft.Data.WhereClip)">
            <summary>
            关联表信息
            </summary>
            <param name="table"></param>
            <param name="where"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.Join``1(MySoft.Data.JoinType,System.String,MySoft.Data.SQLParameter[])">
            <summary>
            关联表信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QueryCreator.Join``1(MySoft.Data.JoinType,MySoft.Data.WhereClip)">
            <summary>
            关联表信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.AddWhere(MySoft.Data.WhereClip)">
            <summary>
            添加一个条件
            </summary>
            <param name="where"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.AddWhere(System.String,MySoft.Data.SQLParameter[])">
            <summary>
            添加一个条件
            </summary>
            <param name="where"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QueryCreator.AddWhere(MySoft.Data.Field,System.Object)">
            <summary>
            添加一个条件
            </summary>
            <param name="field"></param>
            <param name="value"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.AddWhere(System.String,System.Object)">
            <summary>
            添加一个条件
            </summary>
            <param name="fieldName"></param>
            <param name="value"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.AddWhere(System.String,System.String,System.Object)">
            <summary>
            添加一个条件
            </summary>
            <param name="tableName"></param>
            <param name="fieldName"></param>
            <param name="value"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.AddWhere``1(System.String,System.Object)">
            <summary>
            添加一个条件
            </summary>
            <param name="fieldName"></param>
            <param name="value"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.AddOrder(MySoft.Data.OrderByClip)">
            <summary>
            添加一个排序
            </summary>
            <param name="order"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.AddOrder(System.String)">
            <summary>
            添加一个排序
            </summary>
            <param name="orderby"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.AddOrder(MySoft.Data.Field,System.Boolean)">
            <summary>
            增加排序规则
            </summary>
            <param name="field"></param>
            <param name="desc"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.AddOrder(System.String,System.Boolean)">
            <summary>
            增加排序规则
            </summary>
            <param name="fieldName"></param>
            <param name="desc"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.AddOrder(System.String,System.String,System.Boolean)">
            <summary>
            增加排序规则
            </summary>
            <param name="tableName"></param>
            <param name="fieldName"></param>
            <param name="desc"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.AddOrder``1(System.String,System.Boolean)">
            <summary>
            增加排序规则
            </summary>
            <param name="fieldName"></param>
            <param name="desc"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.AddField(MySoft.Data.Field)">
            <summary>
            添加一个字段
            </summary>
            <param name="field"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.AddField(System.String)">
            <summary>
            添加一个字段
            </summary>
            <param name="fieldName"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.AddField(System.String,System.String)">
            <summary>
            添加一个字段
            </summary>
            <param name="tableName"></param>
            <param name="fieldName"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.AddField``1(System.String)">
            <summary>
            添加一个字段
            </summary>
            <param name="fieldName"></param>
        </member>
        <member name="M:MySoft.Data.QueryCreator.RemoveField(MySoft.Data.Field[])">
            <summary>
            移除指定的列
            </summary>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QueryCreator.RemoveField(System.String[])">
            <summary>
            移除指定的列
            </summary>
            <param name="fieldNames"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.QueryCreator.Table">
            <summary>
            返回table
            </summary>
        </member>
        <member name="P:MySoft.Data.QueryCreator.Where">
            <summary>
            返回条件
            </summary>
        </member>
        <member name="P:MySoft.Data.QueryCreator.OrderBy">
            <summary>
            返回排序
            </summary>
        </member>
        <member name="P:MySoft.Data.QueryCreator.Fields">
            <summary>
            返回字段列表
            </summary>
        </member>
        <member name="P:MySoft.Data.QueryCreator.IsRelation">
            <summary>
            是否关联查询
            </summary>
        </member>
        <member name="P:MySoft.Data.QueryCreator.Relations">
            <summary>
            获取关联信息
            </summary>
        </member>
        <member name="T:MySoft.Data.WhereClip">
            <summary>
            条件构造器
            </summary>
        </member>
        <member name="M:MySoft.Data.WhereClip.#ctor(System.String,MySoft.Data.SQLParameter[])">
            <summary>
            自定义一个Where条件
            </summary>
            <param name="where"></param>
            <param name="parameters"></param>
        </member>
        <member name="M:MySoft.Data.WhereClip.op_True(MySoft.Data.WhereClip)">
            <summary>
            
            </summary>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.WhereClip.op_False(MySoft.Data.WhereClip)">
            <summary>
            
            </summary>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.WhereClip.op_LogicalNot(MySoft.Data.WhereClip)">
            <summary>
            非
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.WhereClip.op_BitwiseAnd(MySoft.Data.WhereClip,MySoft.Data.WhereClip)">
            <summary>
            与
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.WhereClip.op_BitwiseOr(MySoft.Data.WhereClip,MySoft.Data.WhereClip)">
            <summary>
            或者
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.WhereClip.Bracket(MySoft.Data.WhereClip)">
            <summary>
            添加括号
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.WhereClip.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.WhereClip.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.WhereClip.Parameters">
            <summary>
            返回参数列表
            </summary>
        </member>
        <member name="T:MySoft.Data.SqlServer9.SqlServer9Provider">
            <summary>
            SQL Server 2005 驱动
            </summary>
        </member>
        <member name="M:MySoft.Data.SqlServer9.SqlServer9Provider.CreatePageQuery``1(MySoft.Data.QuerySection{``0},System.Int32,System.Int32)">
            <summary>
            创建分页查询
            </summary>
            <param name="query"></param>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbHelper.CreateCommand">
            <summary>
            创建命令
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbHelper.CreateParameter">
            <summary>
            创建参数
            </summary>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.MsAccess.MsAccessProvider">
            <summary>
            Access 驱动
            </summary>
        </member>
        <member name="M:MySoft.Data.MsAccess.MsAccessProvider.GetLog(System.Data.Common.DbCommand)">
            <summary>
            获取输出日志
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:MySoft.Data.MsAccess.MsAccessProvider.CreateParameter(System.String,System.Object)">
            <summary>
            创建DbParameter
            </summary>
            <param name="parameterName"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.MsAccess.MsAccessProvider.PrepareCommand(System.Data.Common.DbCommand)">
            <summary>
            调整命令
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.MsAccess.MsAccessProvider.AccessProvider">
            <summary>
            是否为access驱动
            </summary>
        </member>
        <member name="P:MySoft.Data.MsAccess.MsAccessProvider.SupportBatch">
            <summary>
            是否支持批处理
            </summary>
        </member>
        <member name="P:MySoft.Data.MsAccess.MsAccessProvider.RowAutoID">
            <summary>
            返回自动ID的sql语句
            </summary>
        </member>
        <member name="T:MySoft.Data.Table`1">
            <summary>
            表信息
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:MySoft.Data.Table">
            <summary>
            数据库查询时用户传入的自定义信息表
            </summary>
        </member>
        <member name="M:MySoft.Data.Table.#ctor(System.String)">
            <summary>
            实例化一个表
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="M:MySoft.Data.Table.From``1">
            <summary>
            返回一个DbTable实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Table.From``1(System.String)">
            <summary>
            返回一个DbTable实例
            </summary>
            <param name="suffix">后缀名称</param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.Table.From``1(System.String,System.String)">
            <summary>
            返回一个DbTable实例
            </summary>
            <param name="prefix">前缀名称</param>
            <param name="suffix">后缀名称</param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.Table.Item(System.String)">
            <summary>
            返回一个Field
            </summary>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.Table.Name">
            <summary>
            表名称
            </summary>
        </member>
        <member name="P:MySoft.Data.Table.TableName">
            <summary>
            设置表名
            </summary>
        </member>
        <member name="P:MySoft.Data.Table.AliasName">
            <summary>
            表别名
            </summary>
        </member>
        <member name="P:MySoft.Data.Table.Prefix">
            <summary>
            设置表前缀
            </summary>
        </member>
        <member name="P:MySoft.Data.Table.Suffix">
            <summary>
            设置表后缀
            </summary>
        </member>
        <member name="P:MySoft.Data.Table.OriginalName">
            <summary>
            获取原始的表名
            </summary>
        </member>
        <member name="M:MySoft.Data.Table`1.#ctor(System.String)">
            <summary>
            实例化一个表
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="T:MySoft.Data.IArrayList`1">
            <summary>
            可以输出Array的接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:MySoft.Data.IArrayList`1.ToArray">
            <summary>
            返回数组
            </summary>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.IArrayList`1.Item(System.Int32)">
            <summary>
            获取当前索引的对象
            </summary>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.ISourceList`1">
            <summary>
            数据源接口
            </summary>
        </member>
        <member name="M:MySoft.Data.ISourceList`1.ToTable">
            <summary>
            转换成SourceTable
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ISourceList`1.ToGroupList``1(System.String)">
            <summary>
            返回字典
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="groupName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.ISourceList`1.ToGroupList``1(MySoft.Data.Field)">
            <summary>
            返回字典
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="groupField"></param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.HtmlPagerStyle">
            <summary>
            分页样式
            </summary>
        </member>
        <member name="F:MySoft.Data.HtmlPagerStyle.Custom">
            <summary>
            Custom Style
            </summary>
        </member>
        <member name="F:MySoft.Data.HtmlPagerStyle.Digg">
            <summary>
            Digg Style
            </summary>
        </member>
        <member name="F:MySoft.Data.HtmlPagerStyle.Yahoo">
            <summary>
            Yahoo Style
            </summary>
        </member>
        <member name="F:MySoft.Data.HtmlPagerStyle.Meneame">
            <summary>
            Meneame Style
            </summary>
        </member>
        <member name="F:MySoft.Data.HtmlPagerStyle.Flickr">
            <summary>
            Flickr Style
            </summary>
        </member>
        <member name="F:MySoft.Data.HtmlPagerStyle.Sabrosus">
            <summary>
            Sabrosus Style
            </summary>
        </member>
        <member name="F:MySoft.Data.HtmlPagerStyle.Pagination">
            <summary>
            Pagination Style
            </summary>
        </member>
        <member name="F:MySoft.Data.HtmlPagerStyle.Scott">
            <summary>
            Scott Style
            </summary>
        </member>
        <member name="F:MySoft.Data.HtmlPagerStyle.Quotes">
            <summary>
            Quotes Style
            </summary>
        </member>
        <member name="F:MySoft.Data.HtmlPagerStyle.Black">
            <summary>
            Black Style
            </summary>
        </member>
        <member name="F:MySoft.Data.HtmlPagerStyle.Black2">
            <summary>
            Black2 Style
            </summary>
        </member>
        <member name="F:MySoft.Data.HtmlPagerStyle.BlackRed">
            <summary>
            BlackRed Style
            </summary>
        </member>
        <member name="F:MySoft.Data.HtmlPagerStyle.Grayr">
            <summary>
            Grayr Style
            </summary>
        </member>
        <member name="F:MySoft.Data.HtmlPagerStyle.Yellow">
            <summary>
            Yellow Style
            </summary>
        </member>
        <member name="F:MySoft.Data.HtmlPagerStyle.Jogger">
            <summary>
            Jogger Style
            </summary>
        </member>
        <member name="F:MySoft.Data.HtmlPagerStyle.Starcraft2">
            <summary>
            Starcraft2 Style
            </summary>
        </member>
        <member name="F:MySoft.Data.HtmlPagerStyle.Tres">
            <summary>
            Tres Style
            </summary>
        </member>
        <member name="F:MySoft.Data.HtmlPagerStyle.Megas512">
            <summary>
            Megas512 Style
            </summary>
        </member>
        <member name="F:MySoft.Data.HtmlPagerStyle.Technorati">
            <summary>
            Technorati Style
            </summary>
        </member>
        <member name="F:MySoft.Data.HtmlPagerStyle.Youtube">
            <summary>
            Youtube Style
            </summary>
        </member>
        <member name="F:MySoft.Data.HtmlPagerStyle.Msdn">
            <summary>
            Msdn Style
            </summary>
        </member>
        <member name="F:MySoft.Data.HtmlPagerStyle.Badoo">
            <summary>
            Badoo Style
            </summary>
        </member>
        <member name="F:MySoft.Data.HtmlPagerStyle.Manu">
            <summary>
            Manu Style
            </summary>
        </member>
        <member name="F:MySoft.Data.HtmlPagerStyle.GreenBlack">
            <summary>
            GreenBlack Style
            </summary>
        </member>
        <member name="F:MySoft.Data.HtmlPagerStyle.Viciao">
            <summary>
            Viciao Style
            </summary>
        </member>
        <member name="F:MySoft.Data.HtmlPagerStyle.Yahoo2">
            <summary>
            Yahoo2 Style
            </summary>
        </member>
        <member name="T:MySoft.Data.HtmlPager">
            <summary>
            创建分页的html
            </summary>
        </member>
        <member name="F:MySoft.Data.HtmlPager.dataPage">
            <summary>
            定义一个IDataPage属性
            </summary>
        </member>
        <member name="F:MySoft.Data.HtmlPager.linkFormat">
            <summary>
            翻页时连接字符串
            </summary>
        </member>
        <member name="F:MySoft.Data.HtmlPager.linkSize">
            <summary>
            每屏连接条数
            </summary>
        </member>
        <member name="M:MySoft.Data.HtmlPager.#ctor(MySoft.Data.IDataPage,System.String)">
            <summary>
            初始化HtmlPager对象
            </summary>
            <param name="page">对应的数据源</param>
            <param name="linkFormat">对应的翻页格式{0}必须设置，对应当前页</param>
        </member>
        <member name="M:MySoft.Data.HtmlPager.#ctor(MySoft.Data.IDataPage,System.String,System.Int32)">
            <summary>
            初始化HtmlPager对象
            </summary>
            <param name="page">对应的数据源</param>
            <param name="linkFormat">对应的翻页格式{0}必须设置，对应当前页</param>
            <param name="linkSize">每屏连接条数</param>
        </member>
        <member name="P:MySoft.Data.HtmlPager.Style">
            <summary>
            页面样式
            </summary>
        </member>
        <member name="P:MySoft.Data.HtmlPager.PageID">
            <summary>
            页面参数ID
            </summary>
        </member>
        <member name="P:MySoft.Data.HtmlPager.PrevPageTitle">
            <summary>
            上一页标题
            </summary>
        </member>
        <member name="P:MySoft.Data.HtmlPager.NextPageTitle">
            <summary>
            下一页标题
            </summary>
        </member>
        <member name="P:MySoft.Data.HtmlPager.ShowBracket">
            <summary>
            是否显示链接中的括号
            </summary>
        </member>
        <member name="P:MySoft.Data.HtmlPager.ShowGotoPage">
            <summary>
            显示转到某页
            </summary>
        </member>
        <member name="P:MySoft.Data.HtmlPager.ShowRecord">
            <summary>
            显示记录信息
            </summary>
        </member>
        <member name="P:MySoft.Data.HtmlPager.PagerCss">
            <summary>
            分页样式
            </summary>
        </member>
        <member name="P:MySoft.Data.HtmlPager.DataPage">
            <summary>
            获取或设置DataPage
            </summary>
        </member>
        <member name="T:MySoft.Data.DbTrans">
            <summary>
            事务处理类
            </summary>
        </member>
        <member name="M:MySoft.Data.DbTrans.#ctor(MySoft.Data.DbProvider,System.Data.Common.DbTransaction)">
            <summary>
            以DbTransaction方式实例化一个事务
            </summary>
            <param name="dbProvider"></param>
            <param name="dbTran"></param>
        </member>
        <member name="M:MySoft.Data.DbTrans.#ctor(MySoft.Data.DbProvider,System.Data.Common.DbConnection)">
            <summary>
            以BbConnection方式实例化一个事务
            </summary>
            <param name="dbProvider"></param>
            <param name="dbConnection"></param>
        </member>
        <member name="M:MySoft.Data.DbTrans.BeginBatch">
            <summary>
            返回一个Batch
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.BeginBatch(System.Int32)">
            <summary>
            返回一个Batch
            </summary>
            <param name="batchSize">Batch大小</param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Save``1(MySoft.Data.Table,``0)">
            <summary>
            保存一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Insert``1(MySoft.Data.Table,MySoft.Data.Field[],System.Object[])">
            <summary>
             插入一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Insert``1(MySoft.Data.Table,MySoft.Data.Field[],System.Object[],System.Object@)">
            <summary>
             插入一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Delete``1(MySoft.Data.Table,``0)">
            <summary>
            删除一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Delete``1(MySoft.Data.Table,System.Object[])">
            <summary>
            删除指定主键的记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Save``1(``0)">
            <summary>
            保存一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Insert``1(MySoft.Data.Field[],System.Object[])">
            <summary>
             插入一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Insert``1(MySoft.Data.Field[],System.Object[],System.Object@)">
            <summary>
             插入一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Delete``1(``0)">
            <summary>
            删除一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Delete``1(System.Object[])">
            <summary>
            按主键删除指定记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.InsertOrUpdate``1(``0)">
            <summary>
            插入或更新
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Commit">
            <summary>
            提交事务
            </summary>
        </member>
        <member name="M:MySoft.Data.DbTrans.Rollback">
            <summary>
            回滚事务
            </summary>
        </member>
        <member name="M:MySoft.Data.DbTrans.Dispose">
            <summary>
            Dispose事务
            </summary>
        </member>
        <member name="M:MySoft.Data.DbTrans.Close">
            <summary>
            关闭事务
            </summary>
        </member>
        <member name="M:MySoft.Data.DbTrans.Single``1(MySoft.Data.Table,System.Object[])">
            <summary>
            按主键获取一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Single``1(MySoft.Data.Table,MySoft.Data.WhereClip)">
            <summary>
            按条件获取一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Exists``1(MySoft.Data.Table,``0)">
            <summary>
            是否存在指定的实体，按主键匹配
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Exists``1(MySoft.Data.Table,System.Object[])">
            <summary>
            是否存在指定主键的记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Exists``1(MySoft.Data.Table,MySoft.Data.WhereClip)">
            <summary>
            是否存在指定条件的记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Count``1(MySoft.Data.Table,MySoft.Data.WhereClip)">
            <summary>
            按条件获取记录条数
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Sum``1(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Sum操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Avg``1(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Avg操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Max``1(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Max操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Min``1(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Min操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Sum``2(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Sum操作
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Avg``2(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Avg操作
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Max``2(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Max操作
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Min``2(MySoft.Data.Table,MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Min操作
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Single``1(System.Object[])">
            <summary>
            按主键获取一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Single``1(MySoft.Data.WhereClip)">
            <summary>
            按条件获取一个实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Exists``1(``0)">
            <summary>
            是否存在指定的实体，按主键匹配
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Exists``1(System.Object[])">
            <summary>
            是否存在指定主键的记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pkValues"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Exists``1(MySoft.Data.WhereClip)">
            <summary>
            是否存在指定条件的记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Count``1(MySoft.Data.WhereClip)">
            <summary>
            按条件获取记录条数
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Sum``1(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Sum操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Avg``1(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Avg操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Max``1(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Max操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Min``1(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Min操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Sum``2(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Sum操作
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Avg``2(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Avg操作
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Max``2(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Max操作
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Min``2(MySoft.Data.Field,MySoft.Data.WhereClip)">
            <summary>
            按条件进行Min操作
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.From``1">
            <summary>
            返回一个From节
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.From``1(MySoft.Data.Table)">
            <summary>
            返回一个From节
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.From``1(System.String)">
            <summary>
            返回一个From节，并可指定其别名
            </summary>
            <typeparam name="T"></typeparam>
            <param name="aliasName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.FromSql(System.String,MySoft.Data.SQLParameter[])">
            <summary>
            返回一个Sql节
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.FromProc(System.String,MySoft.Data.SQLParameter[])">
            <summary>
            返回一个Proc节
            </summary>
            <param name="procName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Excute(MySoft.Data.InsertCreator)">
            <summary>
            插入数据
            </summary>
            <param name="creator"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Excute``1(MySoft.Data.InsertCreator,``0@)">
            <summary>
             插入数据
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="creator"></param>
            <param name="identityValue"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Excute(MySoft.Data.DeleteCreator)">
            <summary>
            按条件删除指定记录
            </summary>
            <param name="creator"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Excute(MySoft.Data.UpdateCreator)">
            <summary>
            更新数据
            </summary>
            <param name="creator"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.From(MySoft.Data.QueryCreator)">
            <summary>
            返回一个Query节
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Delete``1(MySoft.Data.WhereClip)">
            <summary>
            按条件删除指定记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Update``1(MySoft.Data.Field,System.Object,MySoft.Data.WhereClip)">
            <summary>
            按条件更新指定记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="value"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Update``1(MySoft.Data.Field[],System.Object[],MySoft.Data.WhereClip)">
            <summary>
            按条件更新指定记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Delete``1(MySoft.Data.Table,MySoft.Data.WhereClip)">
            <summary>
            按条件删除指定记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.InsertOrUpdate``1(MySoft.Data.Table,``0)">
            <summary>
            插入或更新
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Update``1(MySoft.Data.Table,MySoft.Data.Field,System.Object,MySoft.Data.WhereClip)">
            <summary>
            按条件更新指定记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field"></param>
            <param name="value"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DbTrans.Update``1(MySoft.Data.Table,MySoft.Data.Field[],System.Object[],MySoft.Data.WhereClip)">
            <summary>
            按条件更新指定记录
            </summary>
            <typeparam name="T"></typeparam>
            <param name="fields"></param>
            <param name="values"></param>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.GroupByClip">
            <summary>
            
            </summary>
        </member>
        <member name="M:MySoft.Data.GroupByClip.#ctor(System.String)">
            <summary>
            自定义一个GroupBy条件
            </summary>
            <param name="groupBy"></param>
        </member>
        <member name="T:MySoft.Data.OrderByClip">
            <summary>
            
            </summary>
        </member>
        <member name="M:MySoft.Data.OrderByClip.#ctor(System.String)">
            <summary>
            自定义一个OrderBy条件
            </summary>
            <param name="orderBy"></param>
        </member>
        <member name="T:MySoft.Data.SourceRow">
            <summary>
            数据行
            </summary>
        </member>
        <member name="M:MySoft.Data.SourceRow.#ctor(System.Data.DataRow)">
            <summary>
            实例化DbRow
            </summary>
            <param name="row"></param>
        </member>
        <member name="M:MySoft.Data.SourceRow.IsDBNull(System.Int32)">
            <summary>
            判断数据是否为null
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetValue(System.Int32)">
            <summary>
            返回object
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetValue``1(System.Int32)">
            <summary>
            返回指定类型的数据
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.IsDBNull(System.String)">
            <summary>
            判断数据是否为null
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetValue(System.String)">
            <summary>
            返回object
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetValue``1(System.String)">
            <summary>
            返回指定类型的数据
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetString(System.String)">
            <summary>
            获取string
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetBytes(System.String)">
            <summary>
            获取byte[]
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetInt16(System.String)">
            <summary>
            获取short
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetInt32(System.String)">
            <summary>
            获取int
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetInt64(System.String)">
            <summary>
            获取long
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetDecimal(System.String)">
            <summary>
            获取decimal
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetDouble(System.String)">
            <summary>
            获取double
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetFloat(System.String)">
            <summary>
            获取float
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetByte(System.String)">
            <summary>
            获取byte
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetBoolean(System.String)">
            <summary>
            获取bool
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetDateTime(System.String)">
            <summary>
            获取DateTime
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetGuid(System.String)">
            <summary>
            获取Guid
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.IsDBNull(MySoft.Data.Field)">
            <summary>
            判断数据是否为null
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetValue(MySoft.Data.Field)">
            <summary>
            返回object
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetValue``1(MySoft.Data.Field)">
            <summary>
            返回指定类型的数据
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetString(MySoft.Data.Field)">
            <summary>
            获取string
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetBytes(MySoft.Data.Field)">
            <summary>
            获取byte[]
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetInt16(MySoft.Data.Field)">
            <summary>
            获取short
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetInt32(MySoft.Data.Field)">
            <summary>
            获取int
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetInt64(MySoft.Data.Field)">
            <summary>
            获取long
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetDecimal(MySoft.Data.Field)">
            <summary>
            获取decimal
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetDouble(MySoft.Data.Field)">
            <summary>
            获取double
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetFloat(MySoft.Data.Field)">
            <summary>
            获取float
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetByte(MySoft.Data.Field)">
            <summary>
            获取byte
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetBoolean(MySoft.Data.Field)">
            <summary>
            获取bool
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetDateTime(MySoft.Data.Field)">
            <summary>
            获取DateTime
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceRow.GetGuid(MySoft.Data.Field)">
            <summary>
            获取Guid
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.SourceRow.DataSource">
            <summary>
            获取当前DataSource
            </summary>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.SourceRow.Item(System.Int32)">
            <summary>
            按索引获取值
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.SourceRow.Item(System.String)">
            <summary>
            按名称获取值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.ArrayList`1">
            <summary>
            数组列表
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:MySoft.Data.ArrayList`1.#ctor(`0)">
            <summary>
            实例化ArrayList
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:MySoft.Data.ArrayList`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            实例化ArrayList
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:MySoft.Data.ArrayList`1.MySoft#Data#IArrayList{T}#ToArray">
            <summary>
            数组列表
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:MySoft.Data.ArrayList`1.Item(System.Int32)">
            <summary>
            获取当前索引的对象
            </summary>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.SourceList`1">
            <summary>
            数组列表
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:MySoft.Data.SourceList`1.#ctor(`0)">
            <summary>
            实例化SourceList
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:MySoft.Data.SourceList`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            实例化SourceList
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:MySoft.Data.SourceList`1.ToTable">
            <summary>
            转换成SourceTable
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceList`1.ConvertTo``1">
            <summary>
            返回另一类型的列表(用于实体的解耦))
            </summary>
            <typeparam name="TOutput"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceList`1.ConvertAll``1(System.Converter{`0,``0})">
            <summary>
            将当前类型转成另一种类型
            </summary>
            <typeparam name="TOutput"></typeparam>
            <param name="converter"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceList`1.ConvertTo``2">
            <summary>
            返回另一类型的列表(输入为类、输出为接口，用于实体的解耦)
            </summary>
            <typeparam name="TOutput"></typeparam>
            <typeparam name="IOutput"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceList`1.ToGroupList``1(MySoft.Data.Field)">
            <summary>
            返回字典
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="groupField"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceList`1.ToGroupList``1(System.String)">
            <summary>
            返回字典
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="groupName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SourceList`1.GetDataTable">
            <summary>
             转换成DataTable
            </summary>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.DataPage">
            <summary>
            分页数据信息
            </summary>
        </member>
        <member name="M:MySoft.Data.DataPage.#ctor">
            <summary>
            初始化DataPage
            </summary>
        </member>
        <member name="M:MySoft.Data.DataPage.#ctor(System.Int32)">
            <summary>
            设置默认页大小
            </summary>
            <param name="pageSize"></param>
        </member>
        <member name="P:MySoft.Data.DataPage.CurrentPageIndex">
            <summary>
            获取或设置页序数
            </summary>
        </member>
        <member name="P:MySoft.Data.DataPage.PageSize">
            <summary>
            获取或设置页大小
            </summary>
        </member>
        <member name="P:MySoft.Data.DataPage.RowCount">
            <summary>
            获取或设置记录数
            </summary>
        </member>
        <member name="P:MySoft.Data.DataPage.PageCount">
            <summary>
            获取或设置页数
            </summary>
        </member>
        <member name="P:MySoft.Data.DataPage.IsFirstPage">
            <summary>
             获取一个值，该值指示当前页是否是首页
            </summary>
        </member>
        <member name="P:MySoft.Data.DataPage.IsLastPage">
            <summary>
            获取一个值，该值指示当前页是否是最后一页
            </summary>
        </member>
        <member name="P:MySoft.Data.DataPage.CurrentRowCount">
            <summary>
            获取当前数据源的记录数
            </summary>
        </member>
        <member name="P:MySoft.Data.DataPage.CurrentStartIndex">
            <summary>
            获取开始记录数
            </summary>
        </member>
        <member name="P:MySoft.Data.DataPage.CurrentEndIndex">
            <summary>
            获取结束记录数
            </summary>
        </member>
        <member name="P:MySoft.Data.DataPage.DataSource">
            <summary>
            获取或设置当前页的数据源
            </summary>
        </member>
        <member name="T:MySoft.Data.DataPage`1">
            <summary>
            分页数据信息
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:MySoft.Data.DataPage`1.#ctor">
            <summary>
            初始化DataPage
            </summary>
        </member>
        <member name="M:MySoft.Data.DataPage`1.#ctor(System.Int32)">
            <summary>
            设置默认页大小
            </summary>
            <param name="pageSize"></param>
        </member>
        <member name="P:MySoft.Data.DataPage`1.DataSource">
            <summary>
            获取或设置当前页的数据源
            </summary>
        </member>
        <member name="T:MySoft.Data.FieldValue">
            <summary>
            字段及值
            </summary>
        </member>
        <member name="M:MySoft.Data.FieldValue.#ctor(MySoft.Data.Field,System.Object)">
            <summary>
            实例化FieldValue
            </summary>
            <param name="field"></param>
            <param name="value"></param>
        </member>
        <member name="T:MySoft.Data.EnumDescriptionAttribute">
            <summary>
            对任意类型添加文字描述
            </summary>
        </member>
        <member name="M:MySoft.Data.EnumDescriptionAttribute.GetDescription(System.Object)">
            <summary>
            获取枚举类型的描述
            </summary>
            <param name="enumObj"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.EnumDescriptionAttribute.GetDescriptions(System.Type)">
            <summary>
            获取枚举类型的所有描述
            </summary>
            <param name="enumType"></param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.DataUtils">
            <summary>
            数据服务类
            </summary>
        </member>
        <member name="M:MySoft.Data.DataUtils.Clone``1(``0)">
            <summary>
            克隆一个对象
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DataUtils.ConvertType``2(``0)">
            <summary>
            从对象obj中获取值传给当前实体,TOutput必须为class或接口
            TInput可以为class、IRowReader、NameValueCollection
            </summary>
            <typeparam name="TInput"></typeparam>
            <typeparam name="TOutput"></typeparam>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DataUtils.ConvertValue``1(System.Object)">
            <summary>
            转换数据类型
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DataUtils.ConvertValue(System.Type,System.Object)">
            <summary>
            转换数据类型
            </summary>
            <param name="type"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DataUtils.GetPropertyAttribute``1(System.Reflection.PropertyInfo)">
            <summary>
            获取自定义属性
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pi"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DataUtils.GetTypeAttribute``1(System.Type)">
            <summary>
            获取自定义属性
            </summary>
            <typeparam name="T"></typeparam>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DataUtils.IsNullOrEmpty(MySoft.Data.WhereClip)">
            <summary>
            判断WhereClip是否为null或空
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DataUtils.IsNullOrEmpty(MySoft.Data.OrderByClip)">
            <summary>
            判断OrderByClip是否为null或空
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DataUtils.IsNullOrEmpty(MySoft.Data.GroupByClip)">
            <summary>
            判断GroupByClip是否为null或空
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DataUtils.CreateInstance``1">
            <summary>
            快速创建一个T
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DataUtils.GetFastInstanceCreator(System.Type)">
            <summary>
            创建一个委托
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DataUtils.GetFastMethodInvoke(System.Reflection.MethodInfo)">
            <summary>
            快速调用方法
            </summary>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DataUtils.SetPropertyValue(System.Object,System.Reflection.PropertyInfo,System.Object)">
            <summary>
            快速设置属性值
            </summary>
            <param name="obj"></param>
            <param name="property"></param>
            <param name="value"></param>
        </member>
        <member name="M:MySoft.Data.DataUtils.SetPropertyValue(System.Object,System.String,System.Object)">
            <summary>
            快速设置属性值
            </summary>
            <param name="obj"></param>
            <param name="propertyName"></param>
            <param name="value"></param>
        </member>
        <member name="M:MySoft.Data.DataUtils.GetPropertyValue(System.Object,System.Reflection.PropertyInfo)">
            <summary>
            快速获取属性值
            </summary>
            <param name="obj"></param>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DataUtils.GetPropertyValue(System.Object,System.String)">
            <summary>
            快速获取属性值
            </summary>
            <param name="obj"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DataUtils.FormatValue(System.Object)">
            <summary>
            格式化数据为数据库通用格式
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DataUtils.CreateFieldValue(MySoft.Data.Field[],System.Object[],System.Boolean)">
            <summary>
            创建一个FieldValue列表
            </summary>
            <param name="fields"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DataUtils.MakeUniqueKey(System.Int32,System.String)">
            <summary>
            Makes a unique key.
            </summary>
            <param name="length">The length.</param>
            <param name="prefix">The prefix.</param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DataUtils.CheckStruct(System.Type)">
            <summary>
            检测是否为结构数据
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.DataUtils.ChangeType(System.Object,System.Type)">
            <summary>
            转换类型
            </summary>
            <param name="value"></param>
            <param name="conversionType"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.MySoft#Data#IPaging#Prefix(System.String)">
            <summary>
            前置值如 top n
            </summary>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.MySoft#Data#IPaging#Suffix(System.String)">
            <summary>
            结尾值如 row_number()
            </summary>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.MySoft#Data#IPaging#End(System.String)">
            <summary>
            设置值如 limit n
            </summary>
            <param name="end"></param>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.GetPage``1(System.Int32)">
            <summary>
            返回一个分页处理的Page节
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToList``1(System.Int32,System.Int32)">
            <summary>
            返回一个列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToList``1">
            <summary>
            返回一个列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToSingle``1">
            <summary>
            返回一个实体
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.SubQuery">
            <summary>
            生成一个子查询
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.SubQuery(System.String)">
            <summary>
            生成一个子查询
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.SubQuery``1">
            <summary>
            生成一个子查询
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.SubQuery``1(System.String)">
            <summary>
            生成一个子查询
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.CreateQuery``1">
            <summary>
            创建一个跟当前相同的子查询
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.GroupBy(MySoft.Data.GroupByClip)">
            <summary>
            进行GroupBy操作
            </summary>
            <param name="groupBy"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.OrderBy(MySoft.Data.OrderByClip)">
            <summary>
            进行OrderBy操作
            </summary>
            <param name="orderBy"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.GetTop(System.Int32)">
            <summary>
            选取前N条数据
            </summary>
            <param name="topSize"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.SetPagingField(MySoft.Data.Field)">
            <summary>
            设置分页字段
            </summary>
            <param name="pagingField"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.Select(MySoft.Data.Field[])">
            <summary>
            选择输出的列
            </summary>
            <param name="fields"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.Select(MySoft.Data.ExcludeField)">
            <summary>
            选择被排除以外的列（用于列多时排除某几列的情况）
            </summary>
            <param name="field"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.Where(MySoft.Data.WhereClip)">
            <summary>
            注入当前查询的条件
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.Union(MySoft.Data.QuerySection{`0})">
            <summary>
            进行Union操作
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.UnionAll(MySoft.Data.QuerySection{`0})">
            <summary>
            进行Union操作
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.Union(MySoft.Data.QuerySection{`0},System.Boolean)">
            <summary>
            进行Union操作
            </summary>
            <param name="query"></param>
            <param name="isUnionAll"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.Having(MySoft.Data.WhereClip)">
            <summary>
            进行Having操作
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.Distinct">
            <summary>
            进行Distinct操作
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.GetPage(System.Int32)">
            <summary>
            返回一个分页处理的Page节
            </summary>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToSingle">
            <summary>
            返回一个实体
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToListResult(System.Int32,System.Int32)">
            <summary>
            返回一个Object列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToListResult">
            <summary>
            返回一个Object列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToListResult``1(System.Int32,System.Int32)">
            <summary>
            返回一个Object列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToListResult``1">
            <summary>
            返回一个Object列表
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToList">
            <summary>
            返回IArrayList
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToList(System.Int32,System.Int32)">
            <summary>
            返回IArrayList
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToReader(System.Int32,System.Int32)">
            <summary>
            返回一个DbReader
            </summary>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToReader">
            <summary>
            返回一个DbReader
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToTable(System.Int32,System.Int32)">
            <summary>
            返回一个DataTable
            </summary>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToTable">
            <summary>
            返回一个DataTable
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToScalar``1">
            <summary>
            返回一个值
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToScalar">
            <summary>
            返回一个值
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.Count">
            <summary>
            返回当前查询记录数
            </summary>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.GetCacheKey(System.String,MySoft.Data.SQLParameter[])">
            <summary>
            获取缓存的Key
            </summary>
            <param name="sql"></param>
            <param name="parameters"></param>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToListPage(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.QuerySection`1.ToTablePage(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <returns></returns>
        </member>
        <member name="P:MySoft.Data.QuerySection`1.FromSection">
            <summary>
            表名
            </summary>
        </member>
        <member name="T:MySoft.Data.SerializationManager">
            <summary>
            The serialization manager.
            </summary>
        </member>
        <member name="M:MySoft.Data.SerializationManager.Serialize(System.Object)">
            <summary>
            Serializes the specified obj.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SerializationManager.Serialize(System.Object,System.Text.Encoding)">
            <summary>
            Serializes the specified obj.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SerializationManager.Deserialize``1(System.String)">
            <summary>
            Deserializes the specified return type.
            </summary>
            <param name="returnType">Type of the return.</param>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SerializationManager.Deserialize(System.Type,System.String)">
            <summary>
            Deserializes the specified return type.
            </summary>
            <param name="returnType">Type of the return.</param>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.SerializationManager.RegisterSerializeHandler(System.Type,MySoft.Data.SerializationManager.TypeSerializeHandler,MySoft.Data.SerializationManager.TypeDeserializeHandler)">
            <summary>
            Registers the serialize handler.
            </summary>
            <param name="type">The type.</param>
            <param name="serializeHandler">The serialize handler.</param>
            <param name="deserializeHandler">The deserialize handler.</param>
        </member>
        <member name="M:MySoft.Data.SerializationManager.UnregisterSerializeHandler(System.Type)">
            <summary>
            Unregisters the serialize handler.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="T:MySoft.Data.SerializationManager.TypeSerializeHandler">
            <summary>
            The serialize delegate.
            </summary>
            <param name="obj">obj to be serialized.</param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.SerializationManager.TypeDeserializeHandler">
            <summary>
            The deserialize delegate.
            </summary>
            <param name="data">the data to be deserialied.</param>
            <returns></returns>
        </member>
        <member name="T:MySoft.Data.MySoftException">
            <summary>
            MySoft异常类
            </summary>
        </member>
        <member name="T:MySoft.Data.CacheUtils">
            <summary>
            缓存操作
            </summary>
        </member>
        <member name="M:MySoft.Data.CacheUtils.Get``1(System.String)">
            <summary>
            获取指定key的缓存
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:MySoft.Data.CacheUtils.Remove``1(System.String)">
            <summary>
            移除指定key的缓存
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
        </member>
        <member name="M:MySoft.Data.CacheUtils.RemoveAll``1">
            <summary>
            移除所有缓存
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:MySoft.Data.CacheUtils.Set``1(System.String,``0)">
            <summary>
            设置缓存信息
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="item"></param>
        </member>
    </members>
</doc>
